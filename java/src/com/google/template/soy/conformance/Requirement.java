// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: src/main/protobuf/conformance.proto
// Protobuf Java Version: 4.28.2

package com.google.template.soy.conformance;

/**
 * <pre>
 * A specification of code requirements.
 * </pre>
 *
 * Protobuf type {@code soy.Requirement}
 */
public final class Requirement extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:soy.Requirement)
    RequirementOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 28,
      /* patch= */ 2,
      /* suffix= */ "",
      Requirement.class.getName());
  }
  // Use Requirement.newBuilder() to construct.
  private Requirement(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private Requirement() {
    errorMessage_ = "";
    exempt_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    onlyApplyTo_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.template.soy.conformance.Conformance.internal_static_soy_Requirement_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.template.soy.conformance.Conformance.internal_static_soy_Requirement_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.template.soy.conformance.Requirement.class, com.google.template.soy.conformance.Requirement.Builder.class);
  }

  public interface BannedCssSelectorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:soy.Requirement.BannedCssSelector)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The banned CSS selectors.
     * </pre>
     *
     * <code>repeated string selector = 1;</code>
     * @return A list containing the selector.
     */
    java.util.List<java.lang.String>
        getSelectorList();
    /**
     * <pre>
     * The banned CSS selectors.
     * </pre>
     *
     * <code>repeated string selector = 1;</code>
     * @return The count of selector.
     */
    int getSelectorCount();
    /**
     * <pre>
     * The banned CSS selectors.
     * </pre>
     *
     * <code>repeated string selector = 1;</code>
     * @param index The index of the element to return.
     * @return The selector at the given index.
     */
    java.lang.String getSelector(int index);
    /**
     * <pre>
     * The banned CSS selectors.
     * </pre>
     *
     * <code>repeated string selector = 1;</code>
     * @param index The index of the value to return.
     * @return The bytes of the selector at the given index.
     */
    com.google.protobuf.ByteString
        getSelectorBytes(int index);

    /**
     * <pre>
     * If true, bans the selector(s) if it is a prefix rather than a substring.
     * Default false.
     * </pre>
     *
     * <code>bool when_prefix = 2;</code>
     * @return The whenPrefix.
     */
    boolean getWhenPrefix();
  }
  /**
   * Protobuf type {@code soy.Requirement.BannedCssSelector}
   */
  public static final class BannedCssSelector extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:soy.Requirement.BannedCssSelector)
      BannedCssSelectorOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        BannedCssSelector.class.getName());
    }
    // Use BannedCssSelector.newBuilder() to construct.
    private BannedCssSelector(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private BannedCssSelector() {
      selector_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.template.soy.conformance.Conformance.internal_static_soy_Requirement_BannedCssSelector_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.template.soy.conformance.Conformance.internal_static_soy_Requirement_BannedCssSelector_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.template.soy.conformance.Requirement.BannedCssSelector.class, com.google.template.soy.conformance.Requirement.BannedCssSelector.Builder.class);
    }

    public static final int SELECTOR_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringArrayList selector_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    /**
     * <pre>
     * The banned CSS selectors.
     * </pre>
     *
     * <code>repeated string selector = 1;</code>
     * @return A list containing the selector.
     */
    public com.google.protobuf.ProtocolStringList
        getSelectorList() {
      return selector_;
    }
    /**
     * <pre>
     * The banned CSS selectors.
     * </pre>
     *
     * <code>repeated string selector = 1;</code>
     * @return The count of selector.
     */
    public int getSelectorCount() {
      return selector_.size();
    }
    /**
     * <pre>
     * The banned CSS selectors.
     * </pre>
     *
     * <code>repeated string selector = 1;</code>
     * @param index The index of the element to return.
     * @return The selector at the given index.
     */
    public java.lang.String getSelector(int index) {
      return selector_.get(index);
    }
    /**
     * <pre>
     * The banned CSS selectors.
     * </pre>
     *
     * <code>repeated string selector = 1;</code>
     * @param index The index of the value to return.
     * @return The bytes of the selector at the given index.
     */
    public com.google.protobuf.ByteString
        getSelectorBytes(int index) {
      return selector_.getByteString(index);
    }

    public static final int WHEN_PREFIX_FIELD_NUMBER = 2;
    private boolean whenPrefix_ = false;
    /**
     * <pre>
     * If true, bans the selector(s) if it is a prefix rather than a substring.
     * Default false.
     * </pre>
     *
     * <code>bool when_prefix = 2;</code>
     * @return The whenPrefix.
     */
    @java.lang.Override
    public boolean getWhenPrefix() {
      return whenPrefix_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < selector_.size(); i++) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, selector_.getRaw(i));
      }
      if (whenPrefix_ != false) {
        output.writeBool(2, whenPrefix_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < selector_.size(); i++) {
          dataSize += computeStringSizeNoTag(selector_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getSelectorList().size();
      }
      if (whenPrefix_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, whenPrefix_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.template.soy.conformance.Requirement.BannedCssSelector)) {
        return super.equals(obj);
      }
      com.google.template.soy.conformance.Requirement.BannedCssSelector other = (com.google.template.soy.conformance.Requirement.BannedCssSelector) obj;

      if (!getSelectorList()
          .equals(other.getSelectorList())) return false;
      if (getWhenPrefix()
          != other.getWhenPrefix()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getSelectorCount() > 0) {
        hash = (37 * hash) + SELECTOR_FIELD_NUMBER;
        hash = (53 * hash) + getSelectorList().hashCode();
      }
      hash = (37 * hash) + WHEN_PREFIX_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getWhenPrefix());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.template.soy.conformance.Requirement.BannedCssSelector parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.template.soy.conformance.Requirement.BannedCssSelector parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.template.soy.conformance.Requirement.BannedCssSelector parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.template.soy.conformance.Requirement.BannedCssSelector parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.template.soy.conformance.Requirement.BannedCssSelector parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.template.soy.conformance.Requirement.BannedCssSelector parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.template.soy.conformance.Requirement.BannedCssSelector parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.google.template.soy.conformance.Requirement.BannedCssSelector parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.google.template.soy.conformance.Requirement.BannedCssSelector parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.template.soy.conformance.Requirement.BannedCssSelector parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.template.soy.conformance.Requirement.BannedCssSelector parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.google.template.soy.conformance.Requirement.BannedCssSelector parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.template.soy.conformance.Requirement.BannedCssSelector prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code soy.Requirement.BannedCssSelector}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:soy.Requirement.BannedCssSelector)
        com.google.template.soy.conformance.Requirement.BannedCssSelectorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.template.soy.conformance.Conformance.internal_static_soy_Requirement_BannedCssSelector_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.template.soy.conformance.Conformance.internal_static_soy_Requirement_BannedCssSelector_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.template.soy.conformance.Requirement.BannedCssSelector.class, com.google.template.soy.conformance.Requirement.BannedCssSelector.Builder.class);
      }

      // Construct using com.google.template.soy.conformance.Requirement.BannedCssSelector.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        selector_ =
            com.google.protobuf.LazyStringArrayList.emptyList();
        whenPrefix_ = false;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.template.soy.conformance.Conformance.internal_static_soy_Requirement_BannedCssSelector_descriptor;
      }

      @java.lang.Override
      public com.google.template.soy.conformance.Requirement.BannedCssSelector getDefaultInstanceForType() {
        return com.google.template.soy.conformance.Requirement.BannedCssSelector.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.template.soy.conformance.Requirement.BannedCssSelector build() {
        com.google.template.soy.conformance.Requirement.BannedCssSelector result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.template.soy.conformance.Requirement.BannedCssSelector buildPartial() {
        com.google.template.soy.conformance.Requirement.BannedCssSelector result = new com.google.template.soy.conformance.Requirement.BannedCssSelector(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.google.template.soy.conformance.Requirement.BannedCssSelector result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          selector_.makeImmutable();
          result.selector_ = selector_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.whenPrefix_ = whenPrefix_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.template.soy.conformance.Requirement.BannedCssSelector) {
          return mergeFrom((com.google.template.soy.conformance.Requirement.BannedCssSelector)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.template.soy.conformance.Requirement.BannedCssSelector other) {
        if (other == com.google.template.soy.conformance.Requirement.BannedCssSelector.getDefaultInstance()) return this;
        if (!other.selector_.isEmpty()) {
          if (selector_.isEmpty()) {
            selector_ = other.selector_;
            bitField0_ |= 0x00000001;
          } else {
            ensureSelectorIsMutable();
            selector_.addAll(other.selector_);
          }
          onChanged();
        }
        if (other.getWhenPrefix() != false) {
          setWhenPrefix(other.getWhenPrefix());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();
                ensureSelectorIsMutable();
                selector_.add(s);
                break;
              } // case 10
              case 16: {
                whenPrefix_ = input.readBool();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.LazyStringArrayList selector_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      private void ensureSelectorIsMutable() {
        if (!selector_.isModifiable()) {
          selector_ = new com.google.protobuf.LazyStringArrayList(selector_);
        }
        bitField0_ |= 0x00000001;
      }
      /**
       * <pre>
       * The banned CSS selectors.
       * </pre>
       *
       * <code>repeated string selector = 1;</code>
       * @return A list containing the selector.
       */
      public com.google.protobuf.ProtocolStringList
          getSelectorList() {
        selector_.makeImmutable();
        return selector_;
      }
      /**
       * <pre>
       * The banned CSS selectors.
       * </pre>
       *
       * <code>repeated string selector = 1;</code>
       * @return The count of selector.
       */
      public int getSelectorCount() {
        return selector_.size();
      }
      /**
       * <pre>
       * The banned CSS selectors.
       * </pre>
       *
       * <code>repeated string selector = 1;</code>
       * @param index The index of the element to return.
       * @return The selector at the given index.
       */
      public java.lang.String getSelector(int index) {
        return selector_.get(index);
      }
      /**
       * <pre>
       * The banned CSS selectors.
       * </pre>
       *
       * <code>repeated string selector = 1;</code>
       * @param index The index of the value to return.
       * @return The bytes of the selector at the given index.
       */
      public com.google.protobuf.ByteString
          getSelectorBytes(int index) {
        return selector_.getByteString(index);
      }
      /**
       * <pre>
       * The banned CSS selectors.
       * </pre>
       *
       * <code>repeated string selector = 1;</code>
       * @param index The index to set the value at.
       * @param value The selector to set.
       * @return This builder for chaining.
       */
      public Builder setSelector(
          int index, java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureSelectorIsMutable();
        selector_.set(index, value);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The banned CSS selectors.
       * </pre>
       *
       * <code>repeated string selector = 1;</code>
       * @param value The selector to add.
       * @return This builder for chaining.
       */
      public Builder addSelector(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureSelectorIsMutable();
        selector_.add(value);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The banned CSS selectors.
       * </pre>
       *
       * <code>repeated string selector = 1;</code>
       * @param values The selector to add.
       * @return This builder for chaining.
       */
      public Builder addAllSelector(
          java.lang.Iterable<java.lang.String> values) {
        ensureSelectorIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, selector_);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The banned CSS selectors.
       * </pre>
       *
       * <code>repeated string selector = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSelector() {
        selector_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The banned CSS selectors.
       * </pre>
       *
       * <code>repeated string selector = 1;</code>
       * @param value The bytes of the selector to add.
       * @return This builder for chaining.
       */
      public Builder addSelectorBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        ensureSelectorIsMutable();
        selector_.add(value);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private boolean whenPrefix_ ;
      /**
       * <pre>
       * If true, bans the selector(s) if it is a prefix rather than a substring.
       * Default false.
       * </pre>
       *
       * <code>bool when_prefix = 2;</code>
       * @return The whenPrefix.
       */
      @java.lang.Override
      public boolean getWhenPrefix() {
        return whenPrefix_;
      }
      /**
       * <pre>
       * If true, bans the selector(s) if it is a prefix rather than a substring.
       * Default false.
       * </pre>
       *
       * <code>bool when_prefix = 2;</code>
       * @param value The whenPrefix to set.
       * @return This builder for chaining.
       */
      public Builder setWhenPrefix(boolean value) {

        whenPrefix_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If true, bans the selector(s) if it is a prefix rather than a substring.
       * Default false.
       * </pre>
       *
       * <code>bool when_prefix = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearWhenPrefix() {
        bitField0_ = (bitField0_ & ~0x00000002);
        whenPrefix_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:soy.Requirement.BannedCssSelector)
    }

    // @@protoc_insertion_point(class_scope:soy.Requirement.BannedCssSelector)
    private static final com.google.template.soy.conformance.Requirement.BannedCssSelector DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.template.soy.conformance.Requirement.BannedCssSelector();
    }

    public static com.google.template.soy.conformance.Requirement.BannedCssSelector getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BannedCssSelector>
        PARSER = new com.google.protobuf.AbstractParser<BannedCssSelector>() {
      @java.lang.Override
      public BannedCssSelector parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<BannedCssSelector> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BannedCssSelector> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.template.soy.conformance.Requirement.BannedCssSelector getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BannedDirectiveOrBuilder extends
      // @@protoc_insertion_point(interface_extends:soy.Requirement.BannedDirective)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The banned directive names.
     * </pre>
     *
     * <code>repeated string directive = 1;</code>
     * @return A list containing the directive.
     */
    java.util.List<java.lang.String>
        getDirectiveList();
    /**
     * <pre>
     * The banned directive names.
     * </pre>
     *
     * <code>repeated string directive = 1;</code>
     * @return The count of directive.
     */
    int getDirectiveCount();
    /**
     * <pre>
     * The banned directive names.
     * </pre>
     *
     * <code>repeated string directive = 1;</code>
     * @param index The index of the element to return.
     * @return The directive at the given index.
     */
    java.lang.String getDirective(int index);
    /**
     * <pre>
     * The banned directive names.
     * </pre>
     *
     * <code>repeated string directive = 1;</code>
     * @param index The index of the value to return.
     * @return The bytes of the directive at the given index.
     */
    com.google.protobuf.ByteString
        getDirectiveBytes(int index);
  }
  /**
   * Protobuf type {@code soy.Requirement.BannedDirective}
   */
  public static final class BannedDirective extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:soy.Requirement.BannedDirective)
      BannedDirectiveOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        BannedDirective.class.getName());
    }
    // Use BannedDirective.newBuilder() to construct.
    private BannedDirective(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private BannedDirective() {
      directive_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.template.soy.conformance.Conformance.internal_static_soy_Requirement_BannedDirective_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.template.soy.conformance.Conformance.internal_static_soy_Requirement_BannedDirective_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.template.soy.conformance.Requirement.BannedDirective.class, com.google.template.soy.conformance.Requirement.BannedDirective.Builder.class);
    }

    public static final int DIRECTIVE_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringArrayList directive_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    /**
     * <pre>
     * The banned directive names.
     * </pre>
     *
     * <code>repeated string directive = 1;</code>
     * @return A list containing the directive.
     */
    public com.google.protobuf.ProtocolStringList
        getDirectiveList() {
      return directive_;
    }
    /**
     * <pre>
     * The banned directive names.
     * </pre>
     *
     * <code>repeated string directive = 1;</code>
     * @return The count of directive.
     */
    public int getDirectiveCount() {
      return directive_.size();
    }
    /**
     * <pre>
     * The banned directive names.
     * </pre>
     *
     * <code>repeated string directive = 1;</code>
     * @param index The index of the element to return.
     * @return The directive at the given index.
     */
    public java.lang.String getDirective(int index) {
      return directive_.get(index);
    }
    /**
     * <pre>
     * The banned directive names.
     * </pre>
     *
     * <code>repeated string directive = 1;</code>
     * @param index The index of the value to return.
     * @return The bytes of the directive at the given index.
     */
    public com.google.protobuf.ByteString
        getDirectiveBytes(int index) {
      return directive_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < directive_.size(); i++) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, directive_.getRaw(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < directive_.size(); i++) {
          dataSize += computeStringSizeNoTag(directive_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getDirectiveList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.template.soy.conformance.Requirement.BannedDirective)) {
        return super.equals(obj);
      }
      com.google.template.soy.conformance.Requirement.BannedDirective other = (com.google.template.soy.conformance.Requirement.BannedDirective) obj;

      if (!getDirectiveList()
          .equals(other.getDirectiveList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getDirectiveCount() > 0) {
        hash = (37 * hash) + DIRECTIVE_FIELD_NUMBER;
        hash = (53 * hash) + getDirectiveList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.template.soy.conformance.Requirement.BannedDirective parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.template.soy.conformance.Requirement.BannedDirective parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.template.soy.conformance.Requirement.BannedDirective parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.template.soy.conformance.Requirement.BannedDirective parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.template.soy.conformance.Requirement.BannedDirective parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.template.soy.conformance.Requirement.BannedDirective parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.template.soy.conformance.Requirement.BannedDirective parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.google.template.soy.conformance.Requirement.BannedDirective parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.google.template.soy.conformance.Requirement.BannedDirective parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.template.soy.conformance.Requirement.BannedDirective parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.template.soy.conformance.Requirement.BannedDirective parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.google.template.soy.conformance.Requirement.BannedDirective parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.template.soy.conformance.Requirement.BannedDirective prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code soy.Requirement.BannedDirective}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:soy.Requirement.BannedDirective)
        com.google.template.soy.conformance.Requirement.BannedDirectiveOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.template.soy.conformance.Conformance.internal_static_soy_Requirement_BannedDirective_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.template.soy.conformance.Conformance.internal_static_soy_Requirement_BannedDirective_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.template.soy.conformance.Requirement.BannedDirective.class, com.google.template.soy.conformance.Requirement.BannedDirective.Builder.class);
      }

      // Construct using com.google.template.soy.conformance.Requirement.BannedDirective.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        directive_ =
            com.google.protobuf.LazyStringArrayList.emptyList();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.template.soy.conformance.Conformance.internal_static_soy_Requirement_BannedDirective_descriptor;
      }

      @java.lang.Override
      public com.google.template.soy.conformance.Requirement.BannedDirective getDefaultInstanceForType() {
        return com.google.template.soy.conformance.Requirement.BannedDirective.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.template.soy.conformance.Requirement.BannedDirective build() {
        com.google.template.soy.conformance.Requirement.BannedDirective result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.template.soy.conformance.Requirement.BannedDirective buildPartial() {
        com.google.template.soy.conformance.Requirement.BannedDirective result = new com.google.template.soy.conformance.Requirement.BannedDirective(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.google.template.soy.conformance.Requirement.BannedDirective result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          directive_.makeImmutable();
          result.directive_ = directive_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.template.soy.conformance.Requirement.BannedDirective) {
          return mergeFrom((com.google.template.soy.conformance.Requirement.BannedDirective)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.template.soy.conformance.Requirement.BannedDirective other) {
        if (other == com.google.template.soy.conformance.Requirement.BannedDirective.getDefaultInstance()) return this;
        if (!other.directive_.isEmpty()) {
          if (directive_.isEmpty()) {
            directive_ = other.directive_;
            bitField0_ |= 0x00000001;
          } else {
            ensureDirectiveIsMutable();
            directive_.addAll(other.directive_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();
                ensureDirectiveIsMutable();
                directive_.add(s);
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.LazyStringArrayList directive_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      private void ensureDirectiveIsMutable() {
        if (!directive_.isModifiable()) {
          directive_ = new com.google.protobuf.LazyStringArrayList(directive_);
        }
        bitField0_ |= 0x00000001;
      }
      /**
       * <pre>
       * The banned directive names.
       * </pre>
       *
       * <code>repeated string directive = 1;</code>
       * @return A list containing the directive.
       */
      public com.google.protobuf.ProtocolStringList
          getDirectiveList() {
        directive_.makeImmutable();
        return directive_;
      }
      /**
       * <pre>
       * The banned directive names.
       * </pre>
       *
       * <code>repeated string directive = 1;</code>
       * @return The count of directive.
       */
      public int getDirectiveCount() {
        return directive_.size();
      }
      /**
       * <pre>
       * The banned directive names.
       * </pre>
       *
       * <code>repeated string directive = 1;</code>
       * @param index The index of the element to return.
       * @return The directive at the given index.
       */
      public java.lang.String getDirective(int index) {
        return directive_.get(index);
      }
      /**
       * <pre>
       * The banned directive names.
       * </pre>
       *
       * <code>repeated string directive = 1;</code>
       * @param index The index of the value to return.
       * @return The bytes of the directive at the given index.
       */
      public com.google.protobuf.ByteString
          getDirectiveBytes(int index) {
        return directive_.getByteString(index);
      }
      /**
       * <pre>
       * The banned directive names.
       * </pre>
       *
       * <code>repeated string directive = 1;</code>
       * @param index The index to set the value at.
       * @param value The directive to set.
       * @return This builder for chaining.
       */
      public Builder setDirective(
          int index, java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureDirectiveIsMutable();
        directive_.set(index, value);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The banned directive names.
       * </pre>
       *
       * <code>repeated string directive = 1;</code>
       * @param value The directive to add.
       * @return This builder for chaining.
       */
      public Builder addDirective(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureDirectiveIsMutable();
        directive_.add(value);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The banned directive names.
       * </pre>
       *
       * <code>repeated string directive = 1;</code>
       * @param values The directive to add.
       * @return This builder for chaining.
       */
      public Builder addAllDirective(
          java.lang.Iterable<java.lang.String> values) {
        ensureDirectiveIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, directive_);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The banned directive names.
       * </pre>
       *
       * <code>repeated string directive = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDirective() {
        directive_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The banned directive names.
       * </pre>
       *
       * <code>repeated string directive = 1;</code>
       * @param value The bytes of the directive to add.
       * @return This builder for chaining.
       */
      public Builder addDirectiveBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        ensureDirectiveIsMutable();
        directive_.add(value);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:soy.Requirement.BannedDirective)
    }

    // @@protoc_insertion_point(class_scope:soy.Requirement.BannedDirective)
    private static final com.google.template.soy.conformance.Requirement.BannedDirective DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.template.soy.conformance.Requirement.BannedDirective();
    }

    public static com.google.template.soy.conformance.Requirement.BannedDirective getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BannedDirective>
        PARSER = new com.google.protobuf.AbstractParser<BannedDirective>() {
      @java.lang.Override
      public BannedDirective parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<BannedDirective> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BannedDirective> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.template.soy.conformance.Requirement.BannedDirective getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BannedFunctionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:soy.Requirement.BannedFunction)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The banned function names.
     * </pre>
     *
     * <code>repeated string function = 1;</code>
     * @return A list containing the function.
     */
    java.util.List<java.lang.String>
        getFunctionList();
    /**
     * <pre>
     * The banned function names.
     * </pre>
     *
     * <code>repeated string function = 1;</code>
     * @return The count of function.
     */
    int getFunctionCount();
    /**
     * <pre>
     * The banned function names.
     * </pre>
     *
     * <code>repeated string function = 1;</code>
     * @param index The index of the element to return.
     * @return The function at the given index.
     */
    java.lang.String getFunction(int index);
    /**
     * <pre>
     * The banned function names.
     * </pre>
     *
     * <code>repeated string function = 1;</code>
     * @param index The index of the value to return.
     * @return The bytes of the function at the given index.
     */
    com.google.protobuf.ByteString
        getFunctionBytes(int index);
  }
  /**
   * Protobuf type {@code soy.Requirement.BannedFunction}
   */
  public static final class BannedFunction extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:soy.Requirement.BannedFunction)
      BannedFunctionOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        BannedFunction.class.getName());
    }
    // Use BannedFunction.newBuilder() to construct.
    private BannedFunction(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private BannedFunction() {
      function_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.template.soy.conformance.Conformance.internal_static_soy_Requirement_BannedFunction_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.template.soy.conformance.Conformance.internal_static_soy_Requirement_BannedFunction_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.template.soy.conformance.Requirement.BannedFunction.class, com.google.template.soy.conformance.Requirement.BannedFunction.Builder.class);
    }

    public static final int FUNCTION_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringArrayList function_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    /**
     * <pre>
     * The banned function names.
     * </pre>
     *
     * <code>repeated string function = 1;</code>
     * @return A list containing the function.
     */
    public com.google.protobuf.ProtocolStringList
        getFunctionList() {
      return function_;
    }
    /**
     * <pre>
     * The banned function names.
     * </pre>
     *
     * <code>repeated string function = 1;</code>
     * @return The count of function.
     */
    public int getFunctionCount() {
      return function_.size();
    }
    /**
     * <pre>
     * The banned function names.
     * </pre>
     *
     * <code>repeated string function = 1;</code>
     * @param index The index of the element to return.
     * @return The function at the given index.
     */
    public java.lang.String getFunction(int index) {
      return function_.get(index);
    }
    /**
     * <pre>
     * The banned function names.
     * </pre>
     *
     * <code>repeated string function = 1;</code>
     * @param index The index of the value to return.
     * @return The bytes of the function at the given index.
     */
    public com.google.protobuf.ByteString
        getFunctionBytes(int index) {
      return function_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < function_.size(); i++) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, function_.getRaw(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < function_.size(); i++) {
          dataSize += computeStringSizeNoTag(function_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getFunctionList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.template.soy.conformance.Requirement.BannedFunction)) {
        return super.equals(obj);
      }
      com.google.template.soy.conformance.Requirement.BannedFunction other = (com.google.template.soy.conformance.Requirement.BannedFunction) obj;

      if (!getFunctionList()
          .equals(other.getFunctionList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getFunctionCount() > 0) {
        hash = (37 * hash) + FUNCTION_FIELD_NUMBER;
        hash = (53 * hash) + getFunctionList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.template.soy.conformance.Requirement.BannedFunction parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.template.soy.conformance.Requirement.BannedFunction parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.template.soy.conformance.Requirement.BannedFunction parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.template.soy.conformance.Requirement.BannedFunction parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.template.soy.conformance.Requirement.BannedFunction parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.template.soy.conformance.Requirement.BannedFunction parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.template.soy.conformance.Requirement.BannedFunction parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.google.template.soy.conformance.Requirement.BannedFunction parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.google.template.soy.conformance.Requirement.BannedFunction parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.template.soy.conformance.Requirement.BannedFunction parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.template.soy.conformance.Requirement.BannedFunction parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.google.template.soy.conformance.Requirement.BannedFunction parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.template.soy.conformance.Requirement.BannedFunction prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code soy.Requirement.BannedFunction}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:soy.Requirement.BannedFunction)
        com.google.template.soy.conformance.Requirement.BannedFunctionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.template.soy.conformance.Conformance.internal_static_soy_Requirement_BannedFunction_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.template.soy.conformance.Conformance.internal_static_soy_Requirement_BannedFunction_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.template.soy.conformance.Requirement.BannedFunction.class, com.google.template.soy.conformance.Requirement.BannedFunction.Builder.class);
      }

      // Construct using com.google.template.soy.conformance.Requirement.BannedFunction.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        function_ =
            com.google.protobuf.LazyStringArrayList.emptyList();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.template.soy.conformance.Conformance.internal_static_soy_Requirement_BannedFunction_descriptor;
      }

      @java.lang.Override
      public com.google.template.soy.conformance.Requirement.BannedFunction getDefaultInstanceForType() {
        return com.google.template.soy.conformance.Requirement.BannedFunction.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.template.soy.conformance.Requirement.BannedFunction build() {
        com.google.template.soy.conformance.Requirement.BannedFunction result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.template.soy.conformance.Requirement.BannedFunction buildPartial() {
        com.google.template.soy.conformance.Requirement.BannedFunction result = new com.google.template.soy.conformance.Requirement.BannedFunction(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.google.template.soy.conformance.Requirement.BannedFunction result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          function_.makeImmutable();
          result.function_ = function_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.template.soy.conformance.Requirement.BannedFunction) {
          return mergeFrom((com.google.template.soy.conformance.Requirement.BannedFunction)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.template.soy.conformance.Requirement.BannedFunction other) {
        if (other == com.google.template.soy.conformance.Requirement.BannedFunction.getDefaultInstance()) return this;
        if (!other.function_.isEmpty()) {
          if (function_.isEmpty()) {
            function_ = other.function_;
            bitField0_ |= 0x00000001;
          } else {
            ensureFunctionIsMutable();
            function_.addAll(other.function_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();
                ensureFunctionIsMutable();
                function_.add(s);
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.LazyStringArrayList function_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      private void ensureFunctionIsMutable() {
        if (!function_.isModifiable()) {
          function_ = new com.google.protobuf.LazyStringArrayList(function_);
        }
        bitField0_ |= 0x00000001;
      }
      /**
       * <pre>
       * The banned function names.
       * </pre>
       *
       * <code>repeated string function = 1;</code>
       * @return A list containing the function.
       */
      public com.google.protobuf.ProtocolStringList
          getFunctionList() {
        function_.makeImmutable();
        return function_;
      }
      /**
       * <pre>
       * The banned function names.
       * </pre>
       *
       * <code>repeated string function = 1;</code>
       * @return The count of function.
       */
      public int getFunctionCount() {
        return function_.size();
      }
      /**
       * <pre>
       * The banned function names.
       * </pre>
       *
       * <code>repeated string function = 1;</code>
       * @param index The index of the element to return.
       * @return The function at the given index.
       */
      public java.lang.String getFunction(int index) {
        return function_.get(index);
      }
      /**
       * <pre>
       * The banned function names.
       * </pre>
       *
       * <code>repeated string function = 1;</code>
       * @param index The index of the value to return.
       * @return The bytes of the function at the given index.
       */
      public com.google.protobuf.ByteString
          getFunctionBytes(int index) {
        return function_.getByteString(index);
      }
      /**
       * <pre>
       * The banned function names.
       * </pre>
       *
       * <code>repeated string function = 1;</code>
       * @param index The index to set the value at.
       * @param value The function to set.
       * @return This builder for chaining.
       */
      public Builder setFunction(
          int index, java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureFunctionIsMutable();
        function_.set(index, value);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The banned function names.
       * </pre>
       *
       * <code>repeated string function = 1;</code>
       * @param value The function to add.
       * @return This builder for chaining.
       */
      public Builder addFunction(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureFunctionIsMutable();
        function_.add(value);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The banned function names.
       * </pre>
       *
       * <code>repeated string function = 1;</code>
       * @param values The function to add.
       * @return This builder for chaining.
       */
      public Builder addAllFunction(
          java.lang.Iterable<java.lang.String> values) {
        ensureFunctionIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, function_);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The banned function names.
       * </pre>
       *
       * <code>repeated string function = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearFunction() {
        function_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The banned function names.
       * </pre>
       *
       * <code>repeated string function = 1;</code>
       * @param value The bytes of the function to add.
       * @return This builder for chaining.
       */
      public Builder addFunctionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        ensureFunctionIsMutable();
        function_.add(value);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:soy.Requirement.BannedFunction)
    }

    // @@protoc_insertion_point(class_scope:soy.Requirement.BannedFunction)
    private static final com.google.template.soy.conformance.Requirement.BannedFunction DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.template.soy.conformance.Requirement.BannedFunction();
    }

    public static com.google.template.soy.conformance.Requirement.BannedFunction getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BannedFunction>
        PARSER = new com.google.protobuf.AbstractParser<BannedFunction>() {
      @java.lang.Override
      public BannedFunction parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<BannedFunction> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BannedFunction> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.template.soy.conformance.Requirement.BannedFunction getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BannedRawTextOrBuilder extends
      // @@protoc_insertion_point(interface_extends:soy.Requirement.BannedRawText)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The banned text. This only bans literal text, not commands or expressions
     * </pre>
     *
     * <code>repeated string text = 1;</code>
     * @return A list containing the text.
     */
    java.util.List<java.lang.String>
        getTextList();
    /**
     * <pre>
     * The banned text. This only bans literal text, not commands or expressions
     * </pre>
     *
     * <code>repeated string text = 1;</code>
     * @return The count of text.
     */
    int getTextCount();
    /**
     * <pre>
     * The banned text. This only bans literal text, not commands or expressions
     * </pre>
     *
     * <code>repeated string text = 1;</code>
     * @param index The index of the element to return.
     * @return The text at the given index.
     */
    java.lang.String getText(int index);
    /**
     * <pre>
     * The banned text. This only bans literal text, not commands or expressions
     * </pre>
     *
     * <code>repeated string text = 1;</code>
     * @param index The index of the value to return.
     * @return The bytes of the text at the given index.
     */
    com.google.protobuf.ByteString
        getTextBytes(int index);

    /**
     * <pre>
     * However, if the text occurs inside the given html attributes, then it
     * will be allowed.
     * </pre>
     *
     * <code>repeated string except_in_html_attribute = 2;</code>
     * @return A list containing the exceptInHtmlAttribute.
     */
    java.util.List<java.lang.String>
        getExceptInHtmlAttributeList();
    /**
     * <pre>
     * However, if the text occurs inside the given html attributes, then it
     * will be allowed.
     * </pre>
     *
     * <code>repeated string except_in_html_attribute = 2;</code>
     * @return The count of exceptInHtmlAttribute.
     */
    int getExceptInHtmlAttributeCount();
    /**
     * <pre>
     * However, if the text occurs inside the given html attributes, then it
     * will be allowed.
     * </pre>
     *
     * <code>repeated string except_in_html_attribute = 2;</code>
     * @param index The index of the element to return.
     * @return The exceptInHtmlAttribute at the given index.
     */
    java.lang.String getExceptInHtmlAttribute(int index);
    /**
     * <pre>
     * However, if the text occurs inside the given html attributes, then it
     * will be allowed.
     * </pre>
     *
     * <code>repeated string except_in_html_attribute = 2;</code>
     * @param index The index of the value to return.
     * @return The bytes of the exceptInHtmlAttribute at the given index.
     */
    com.google.protobuf.ByteString
        getExceptInHtmlAttributeBytes(int index);
  }
  /**
   * Protobuf type {@code soy.Requirement.BannedRawText}
   */
  public static final class BannedRawText extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:soy.Requirement.BannedRawText)
      BannedRawTextOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        BannedRawText.class.getName());
    }
    // Use BannedRawText.newBuilder() to construct.
    private BannedRawText(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private BannedRawText() {
      text_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      exceptInHtmlAttribute_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.template.soy.conformance.Conformance.internal_static_soy_Requirement_BannedRawText_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.template.soy.conformance.Conformance.internal_static_soy_Requirement_BannedRawText_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.template.soy.conformance.Requirement.BannedRawText.class, com.google.template.soy.conformance.Requirement.BannedRawText.Builder.class);
    }

    public static final int TEXT_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringArrayList text_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    /**
     * <pre>
     * The banned text. This only bans literal text, not commands or expressions
     * </pre>
     *
     * <code>repeated string text = 1;</code>
     * @return A list containing the text.
     */
    public com.google.protobuf.ProtocolStringList
        getTextList() {
      return text_;
    }
    /**
     * <pre>
     * The banned text. This only bans literal text, not commands or expressions
     * </pre>
     *
     * <code>repeated string text = 1;</code>
     * @return The count of text.
     */
    public int getTextCount() {
      return text_.size();
    }
    /**
     * <pre>
     * The banned text. This only bans literal text, not commands or expressions
     * </pre>
     *
     * <code>repeated string text = 1;</code>
     * @param index The index of the element to return.
     * @return The text at the given index.
     */
    public java.lang.String getText(int index) {
      return text_.get(index);
    }
    /**
     * <pre>
     * The banned text. This only bans literal text, not commands or expressions
     * </pre>
     *
     * <code>repeated string text = 1;</code>
     * @param index The index of the value to return.
     * @return The bytes of the text at the given index.
     */
    public com.google.protobuf.ByteString
        getTextBytes(int index) {
      return text_.getByteString(index);
    }

    public static final int EXCEPT_IN_HTML_ATTRIBUTE_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringArrayList exceptInHtmlAttribute_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    /**
     * <pre>
     * However, if the text occurs inside the given html attributes, then it
     * will be allowed.
     * </pre>
     *
     * <code>repeated string except_in_html_attribute = 2;</code>
     * @return A list containing the exceptInHtmlAttribute.
     */
    public com.google.protobuf.ProtocolStringList
        getExceptInHtmlAttributeList() {
      return exceptInHtmlAttribute_;
    }
    /**
     * <pre>
     * However, if the text occurs inside the given html attributes, then it
     * will be allowed.
     * </pre>
     *
     * <code>repeated string except_in_html_attribute = 2;</code>
     * @return The count of exceptInHtmlAttribute.
     */
    public int getExceptInHtmlAttributeCount() {
      return exceptInHtmlAttribute_.size();
    }
    /**
     * <pre>
     * However, if the text occurs inside the given html attributes, then it
     * will be allowed.
     * </pre>
     *
     * <code>repeated string except_in_html_attribute = 2;</code>
     * @param index The index of the element to return.
     * @return The exceptInHtmlAttribute at the given index.
     */
    public java.lang.String getExceptInHtmlAttribute(int index) {
      return exceptInHtmlAttribute_.get(index);
    }
    /**
     * <pre>
     * However, if the text occurs inside the given html attributes, then it
     * will be allowed.
     * </pre>
     *
     * <code>repeated string except_in_html_attribute = 2;</code>
     * @param index The index of the value to return.
     * @return The bytes of the exceptInHtmlAttribute at the given index.
     */
    public com.google.protobuf.ByteString
        getExceptInHtmlAttributeBytes(int index) {
      return exceptInHtmlAttribute_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < text_.size(); i++) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, text_.getRaw(i));
      }
      for (int i = 0; i < exceptInHtmlAttribute_.size(); i++) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, exceptInHtmlAttribute_.getRaw(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < text_.size(); i++) {
          dataSize += computeStringSizeNoTag(text_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getTextList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < exceptInHtmlAttribute_.size(); i++) {
          dataSize += computeStringSizeNoTag(exceptInHtmlAttribute_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getExceptInHtmlAttributeList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.template.soy.conformance.Requirement.BannedRawText)) {
        return super.equals(obj);
      }
      com.google.template.soy.conformance.Requirement.BannedRawText other = (com.google.template.soy.conformance.Requirement.BannedRawText) obj;

      if (!getTextList()
          .equals(other.getTextList())) return false;
      if (!getExceptInHtmlAttributeList()
          .equals(other.getExceptInHtmlAttributeList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getTextCount() > 0) {
        hash = (37 * hash) + TEXT_FIELD_NUMBER;
        hash = (53 * hash) + getTextList().hashCode();
      }
      if (getExceptInHtmlAttributeCount() > 0) {
        hash = (37 * hash) + EXCEPT_IN_HTML_ATTRIBUTE_FIELD_NUMBER;
        hash = (53 * hash) + getExceptInHtmlAttributeList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.template.soy.conformance.Requirement.BannedRawText parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.template.soy.conformance.Requirement.BannedRawText parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.template.soy.conformance.Requirement.BannedRawText parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.template.soy.conformance.Requirement.BannedRawText parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.template.soy.conformance.Requirement.BannedRawText parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.template.soy.conformance.Requirement.BannedRawText parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.template.soy.conformance.Requirement.BannedRawText parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.google.template.soy.conformance.Requirement.BannedRawText parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.google.template.soy.conformance.Requirement.BannedRawText parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.template.soy.conformance.Requirement.BannedRawText parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.template.soy.conformance.Requirement.BannedRawText parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.google.template.soy.conformance.Requirement.BannedRawText parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.template.soy.conformance.Requirement.BannedRawText prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code soy.Requirement.BannedRawText}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:soy.Requirement.BannedRawText)
        com.google.template.soy.conformance.Requirement.BannedRawTextOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.template.soy.conformance.Conformance.internal_static_soy_Requirement_BannedRawText_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.template.soy.conformance.Conformance.internal_static_soy_Requirement_BannedRawText_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.template.soy.conformance.Requirement.BannedRawText.class, com.google.template.soy.conformance.Requirement.BannedRawText.Builder.class);
      }

      // Construct using com.google.template.soy.conformance.Requirement.BannedRawText.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        text_ =
            com.google.protobuf.LazyStringArrayList.emptyList();
        exceptInHtmlAttribute_ =
            com.google.protobuf.LazyStringArrayList.emptyList();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.template.soy.conformance.Conformance.internal_static_soy_Requirement_BannedRawText_descriptor;
      }

      @java.lang.Override
      public com.google.template.soy.conformance.Requirement.BannedRawText getDefaultInstanceForType() {
        return com.google.template.soy.conformance.Requirement.BannedRawText.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.template.soy.conformance.Requirement.BannedRawText build() {
        com.google.template.soy.conformance.Requirement.BannedRawText result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.template.soy.conformance.Requirement.BannedRawText buildPartial() {
        com.google.template.soy.conformance.Requirement.BannedRawText result = new com.google.template.soy.conformance.Requirement.BannedRawText(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.google.template.soy.conformance.Requirement.BannedRawText result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          text_.makeImmutable();
          result.text_ = text_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          exceptInHtmlAttribute_.makeImmutable();
          result.exceptInHtmlAttribute_ = exceptInHtmlAttribute_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.template.soy.conformance.Requirement.BannedRawText) {
          return mergeFrom((com.google.template.soy.conformance.Requirement.BannedRawText)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.template.soy.conformance.Requirement.BannedRawText other) {
        if (other == com.google.template.soy.conformance.Requirement.BannedRawText.getDefaultInstance()) return this;
        if (!other.text_.isEmpty()) {
          if (text_.isEmpty()) {
            text_ = other.text_;
            bitField0_ |= 0x00000001;
          } else {
            ensureTextIsMutable();
            text_.addAll(other.text_);
          }
          onChanged();
        }
        if (!other.exceptInHtmlAttribute_.isEmpty()) {
          if (exceptInHtmlAttribute_.isEmpty()) {
            exceptInHtmlAttribute_ = other.exceptInHtmlAttribute_;
            bitField0_ |= 0x00000002;
          } else {
            ensureExceptInHtmlAttributeIsMutable();
            exceptInHtmlAttribute_.addAll(other.exceptInHtmlAttribute_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();
                ensureTextIsMutable();
                text_.add(s);
                break;
              } // case 10
              case 18: {
                java.lang.String s = input.readStringRequireUtf8();
                ensureExceptInHtmlAttributeIsMutable();
                exceptInHtmlAttribute_.add(s);
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.LazyStringArrayList text_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      private void ensureTextIsMutable() {
        if (!text_.isModifiable()) {
          text_ = new com.google.protobuf.LazyStringArrayList(text_);
        }
        bitField0_ |= 0x00000001;
      }
      /**
       * <pre>
       * The banned text. This only bans literal text, not commands or expressions
       * </pre>
       *
       * <code>repeated string text = 1;</code>
       * @return A list containing the text.
       */
      public com.google.protobuf.ProtocolStringList
          getTextList() {
        text_.makeImmutable();
        return text_;
      }
      /**
       * <pre>
       * The banned text. This only bans literal text, not commands or expressions
       * </pre>
       *
       * <code>repeated string text = 1;</code>
       * @return The count of text.
       */
      public int getTextCount() {
        return text_.size();
      }
      /**
       * <pre>
       * The banned text. This only bans literal text, not commands or expressions
       * </pre>
       *
       * <code>repeated string text = 1;</code>
       * @param index The index of the element to return.
       * @return The text at the given index.
       */
      public java.lang.String getText(int index) {
        return text_.get(index);
      }
      /**
       * <pre>
       * The banned text. This only bans literal text, not commands or expressions
       * </pre>
       *
       * <code>repeated string text = 1;</code>
       * @param index The index of the value to return.
       * @return The bytes of the text at the given index.
       */
      public com.google.protobuf.ByteString
          getTextBytes(int index) {
        return text_.getByteString(index);
      }
      /**
       * <pre>
       * The banned text. This only bans literal text, not commands or expressions
       * </pre>
       *
       * <code>repeated string text = 1;</code>
       * @param index The index to set the value at.
       * @param value The text to set.
       * @return This builder for chaining.
       */
      public Builder setText(
          int index, java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureTextIsMutable();
        text_.set(index, value);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The banned text. This only bans literal text, not commands or expressions
       * </pre>
       *
       * <code>repeated string text = 1;</code>
       * @param value The text to add.
       * @return This builder for chaining.
       */
      public Builder addText(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureTextIsMutable();
        text_.add(value);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The banned text. This only bans literal text, not commands or expressions
       * </pre>
       *
       * <code>repeated string text = 1;</code>
       * @param values The text to add.
       * @return This builder for chaining.
       */
      public Builder addAllText(
          java.lang.Iterable<java.lang.String> values) {
        ensureTextIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, text_);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The banned text. This only bans literal text, not commands or expressions
       * </pre>
       *
       * <code>repeated string text = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearText() {
        text_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The banned text. This only bans literal text, not commands or expressions
       * </pre>
       *
       * <code>repeated string text = 1;</code>
       * @param value The bytes of the text to add.
       * @return This builder for chaining.
       */
      public Builder addTextBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        ensureTextIsMutable();
        text_.add(value);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringArrayList exceptInHtmlAttribute_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      private void ensureExceptInHtmlAttributeIsMutable() {
        if (!exceptInHtmlAttribute_.isModifiable()) {
          exceptInHtmlAttribute_ = new com.google.protobuf.LazyStringArrayList(exceptInHtmlAttribute_);
        }
        bitField0_ |= 0x00000002;
      }
      /**
       * <pre>
       * However, if the text occurs inside the given html attributes, then it
       * will be allowed.
       * </pre>
       *
       * <code>repeated string except_in_html_attribute = 2;</code>
       * @return A list containing the exceptInHtmlAttribute.
       */
      public com.google.protobuf.ProtocolStringList
          getExceptInHtmlAttributeList() {
        exceptInHtmlAttribute_.makeImmutable();
        return exceptInHtmlAttribute_;
      }
      /**
       * <pre>
       * However, if the text occurs inside the given html attributes, then it
       * will be allowed.
       * </pre>
       *
       * <code>repeated string except_in_html_attribute = 2;</code>
       * @return The count of exceptInHtmlAttribute.
       */
      public int getExceptInHtmlAttributeCount() {
        return exceptInHtmlAttribute_.size();
      }
      /**
       * <pre>
       * However, if the text occurs inside the given html attributes, then it
       * will be allowed.
       * </pre>
       *
       * <code>repeated string except_in_html_attribute = 2;</code>
       * @param index The index of the element to return.
       * @return The exceptInHtmlAttribute at the given index.
       */
      public java.lang.String getExceptInHtmlAttribute(int index) {
        return exceptInHtmlAttribute_.get(index);
      }
      /**
       * <pre>
       * However, if the text occurs inside the given html attributes, then it
       * will be allowed.
       * </pre>
       *
       * <code>repeated string except_in_html_attribute = 2;</code>
       * @param index The index of the value to return.
       * @return The bytes of the exceptInHtmlAttribute at the given index.
       */
      public com.google.protobuf.ByteString
          getExceptInHtmlAttributeBytes(int index) {
        return exceptInHtmlAttribute_.getByteString(index);
      }
      /**
       * <pre>
       * However, if the text occurs inside the given html attributes, then it
       * will be allowed.
       * </pre>
       *
       * <code>repeated string except_in_html_attribute = 2;</code>
       * @param index The index to set the value at.
       * @param value The exceptInHtmlAttribute to set.
       * @return This builder for chaining.
       */
      public Builder setExceptInHtmlAttribute(
          int index, java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureExceptInHtmlAttributeIsMutable();
        exceptInHtmlAttribute_.set(index, value);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * However, if the text occurs inside the given html attributes, then it
       * will be allowed.
       * </pre>
       *
       * <code>repeated string except_in_html_attribute = 2;</code>
       * @param value The exceptInHtmlAttribute to add.
       * @return This builder for chaining.
       */
      public Builder addExceptInHtmlAttribute(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureExceptInHtmlAttributeIsMutable();
        exceptInHtmlAttribute_.add(value);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * However, if the text occurs inside the given html attributes, then it
       * will be allowed.
       * </pre>
       *
       * <code>repeated string except_in_html_attribute = 2;</code>
       * @param values The exceptInHtmlAttribute to add.
       * @return This builder for chaining.
       */
      public Builder addAllExceptInHtmlAttribute(
          java.lang.Iterable<java.lang.String> values) {
        ensureExceptInHtmlAttributeIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, exceptInHtmlAttribute_);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * However, if the text occurs inside the given html attributes, then it
       * will be allowed.
       * </pre>
       *
       * <code>repeated string except_in_html_attribute = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearExceptInHtmlAttribute() {
        exceptInHtmlAttribute_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * However, if the text occurs inside the given html attributes, then it
       * will be allowed.
       * </pre>
       *
       * <code>repeated string except_in_html_attribute = 2;</code>
       * @param value The bytes of the exceptInHtmlAttribute to add.
       * @return This builder for chaining.
       */
      public Builder addExceptInHtmlAttributeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        ensureExceptInHtmlAttributeIsMutable();
        exceptInHtmlAttribute_.add(value);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:soy.Requirement.BannedRawText)
    }

    // @@protoc_insertion_point(class_scope:soy.Requirement.BannedRawText)
    private static final com.google.template.soy.conformance.Requirement.BannedRawText DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.template.soy.conformance.Requirement.BannedRawText();
    }

    public static com.google.template.soy.conformance.Requirement.BannedRawText getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BannedRawText>
        PARSER = new com.google.protobuf.AbstractParser<BannedRawText>() {
      @java.lang.Override
      public BannedRawText parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<BannedRawText> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BannedRawText> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.template.soy.conformance.Requirement.BannedRawText getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BannedHtmlTagOrBuilder extends
      // @@protoc_insertion_point(interface_extends:soy.Requirement.BannedHtmlTag)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The banned HTML tag (lowercase).
     * </pre>
     *
     * <code>repeated string tag = 1;</code>
     * @return A list containing the tag.
     */
    java.util.List<java.lang.String>
        getTagList();
    /**
     * <pre>
     * The banned HTML tag (lowercase).
     * </pre>
     *
     * <code>repeated string tag = 1;</code>
     * @return The count of tag.
     */
    int getTagCount();
    /**
     * <pre>
     * The banned HTML tag (lowercase).
     * </pre>
     *
     * <code>repeated string tag = 1;</code>
     * @param index The index of the element to return.
     * @return The tag at the given index.
     */
    java.lang.String getTag(int index);
    /**
     * <pre>
     * The banned HTML tag (lowercase).
     * </pre>
     *
     * <code>repeated string tag = 1;</code>
     * @param index The index of the value to return.
     * @return The bytes of the tag at the given index.
     */
    com.google.protobuf.ByteString
        getTagBytes(int index);

    /**
     * <pre>
     * If provided, then it will only ban tags that have all these attributes.
     * </pre>
     *
     * <code>repeated string when_attribute_possibly_present = 2;</code>
     * @return A list containing the whenAttributePossiblyPresent.
     */
    java.util.List<java.lang.String>
        getWhenAttributePossiblyPresentList();
    /**
     * <pre>
     * If provided, then it will only ban tags that have all these attributes.
     * </pre>
     *
     * <code>repeated string when_attribute_possibly_present = 2;</code>
     * @return The count of whenAttributePossiblyPresent.
     */
    int getWhenAttributePossiblyPresentCount();
    /**
     * <pre>
     * If provided, then it will only ban tags that have all these attributes.
     * </pre>
     *
     * <code>repeated string when_attribute_possibly_present = 2;</code>
     * @param index The index of the element to return.
     * @return The whenAttributePossiblyPresent at the given index.
     */
    java.lang.String getWhenAttributePossiblyPresent(int index);
    /**
     * <pre>
     * If provided, then it will only ban tags that have all these attributes.
     * </pre>
     *
     * <code>repeated string when_attribute_possibly_present = 2;</code>
     * @param index The index of the value to return.
     * @return The bytes of the whenAttributePossiblyPresent at the given index.
     */
    com.google.protobuf.ByteString
        getWhenAttributePossiblyPresentBytes(int index);
  }
  /**
   * Protobuf type {@code soy.Requirement.BannedHtmlTag}
   */
  public static final class BannedHtmlTag extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:soy.Requirement.BannedHtmlTag)
      BannedHtmlTagOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        BannedHtmlTag.class.getName());
    }
    // Use BannedHtmlTag.newBuilder() to construct.
    private BannedHtmlTag(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private BannedHtmlTag() {
      tag_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      whenAttributePossiblyPresent_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.template.soy.conformance.Conformance.internal_static_soy_Requirement_BannedHtmlTag_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.template.soy.conformance.Conformance.internal_static_soy_Requirement_BannedHtmlTag_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.template.soy.conformance.Requirement.BannedHtmlTag.class, com.google.template.soy.conformance.Requirement.BannedHtmlTag.Builder.class);
    }

    public static final int TAG_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringArrayList tag_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    /**
     * <pre>
     * The banned HTML tag (lowercase).
     * </pre>
     *
     * <code>repeated string tag = 1;</code>
     * @return A list containing the tag.
     */
    public com.google.protobuf.ProtocolStringList
        getTagList() {
      return tag_;
    }
    /**
     * <pre>
     * The banned HTML tag (lowercase).
     * </pre>
     *
     * <code>repeated string tag = 1;</code>
     * @return The count of tag.
     */
    public int getTagCount() {
      return tag_.size();
    }
    /**
     * <pre>
     * The banned HTML tag (lowercase).
     * </pre>
     *
     * <code>repeated string tag = 1;</code>
     * @param index The index of the element to return.
     * @return The tag at the given index.
     */
    public java.lang.String getTag(int index) {
      return tag_.get(index);
    }
    /**
     * <pre>
     * The banned HTML tag (lowercase).
     * </pre>
     *
     * <code>repeated string tag = 1;</code>
     * @param index The index of the value to return.
     * @return The bytes of the tag at the given index.
     */
    public com.google.protobuf.ByteString
        getTagBytes(int index) {
      return tag_.getByteString(index);
    }

    public static final int WHEN_ATTRIBUTE_POSSIBLY_PRESENT_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringArrayList whenAttributePossiblyPresent_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    /**
     * <pre>
     * If provided, then it will only ban tags that have all these attributes.
     * </pre>
     *
     * <code>repeated string when_attribute_possibly_present = 2;</code>
     * @return A list containing the whenAttributePossiblyPresent.
     */
    public com.google.protobuf.ProtocolStringList
        getWhenAttributePossiblyPresentList() {
      return whenAttributePossiblyPresent_;
    }
    /**
     * <pre>
     * If provided, then it will only ban tags that have all these attributes.
     * </pre>
     *
     * <code>repeated string when_attribute_possibly_present = 2;</code>
     * @return The count of whenAttributePossiblyPresent.
     */
    public int getWhenAttributePossiblyPresentCount() {
      return whenAttributePossiblyPresent_.size();
    }
    /**
     * <pre>
     * If provided, then it will only ban tags that have all these attributes.
     * </pre>
     *
     * <code>repeated string when_attribute_possibly_present = 2;</code>
     * @param index The index of the element to return.
     * @return The whenAttributePossiblyPresent at the given index.
     */
    public java.lang.String getWhenAttributePossiblyPresent(int index) {
      return whenAttributePossiblyPresent_.get(index);
    }
    /**
     * <pre>
     * If provided, then it will only ban tags that have all these attributes.
     * </pre>
     *
     * <code>repeated string when_attribute_possibly_present = 2;</code>
     * @param index The index of the value to return.
     * @return The bytes of the whenAttributePossiblyPresent at the given index.
     */
    public com.google.protobuf.ByteString
        getWhenAttributePossiblyPresentBytes(int index) {
      return whenAttributePossiblyPresent_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < tag_.size(); i++) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, tag_.getRaw(i));
      }
      for (int i = 0; i < whenAttributePossiblyPresent_.size(); i++) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, whenAttributePossiblyPresent_.getRaw(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < tag_.size(); i++) {
          dataSize += computeStringSizeNoTag(tag_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getTagList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < whenAttributePossiblyPresent_.size(); i++) {
          dataSize += computeStringSizeNoTag(whenAttributePossiblyPresent_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getWhenAttributePossiblyPresentList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.template.soy.conformance.Requirement.BannedHtmlTag)) {
        return super.equals(obj);
      }
      com.google.template.soy.conformance.Requirement.BannedHtmlTag other = (com.google.template.soy.conformance.Requirement.BannedHtmlTag) obj;

      if (!getTagList()
          .equals(other.getTagList())) return false;
      if (!getWhenAttributePossiblyPresentList()
          .equals(other.getWhenAttributePossiblyPresentList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getTagCount() > 0) {
        hash = (37 * hash) + TAG_FIELD_NUMBER;
        hash = (53 * hash) + getTagList().hashCode();
      }
      if (getWhenAttributePossiblyPresentCount() > 0) {
        hash = (37 * hash) + WHEN_ATTRIBUTE_POSSIBLY_PRESENT_FIELD_NUMBER;
        hash = (53 * hash) + getWhenAttributePossiblyPresentList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.template.soy.conformance.Requirement.BannedHtmlTag parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.template.soy.conformance.Requirement.BannedHtmlTag parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.template.soy.conformance.Requirement.BannedHtmlTag parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.template.soy.conformance.Requirement.BannedHtmlTag parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.template.soy.conformance.Requirement.BannedHtmlTag parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.template.soy.conformance.Requirement.BannedHtmlTag parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.template.soy.conformance.Requirement.BannedHtmlTag parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.google.template.soy.conformance.Requirement.BannedHtmlTag parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.google.template.soy.conformance.Requirement.BannedHtmlTag parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.template.soy.conformance.Requirement.BannedHtmlTag parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.template.soy.conformance.Requirement.BannedHtmlTag parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.google.template.soy.conformance.Requirement.BannedHtmlTag parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.template.soy.conformance.Requirement.BannedHtmlTag prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code soy.Requirement.BannedHtmlTag}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:soy.Requirement.BannedHtmlTag)
        com.google.template.soy.conformance.Requirement.BannedHtmlTagOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.template.soy.conformance.Conformance.internal_static_soy_Requirement_BannedHtmlTag_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.template.soy.conformance.Conformance.internal_static_soy_Requirement_BannedHtmlTag_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.template.soy.conformance.Requirement.BannedHtmlTag.class, com.google.template.soy.conformance.Requirement.BannedHtmlTag.Builder.class);
      }

      // Construct using com.google.template.soy.conformance.Requirement.BannedHtmlTag.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        tag_ =
            com.google.protobuf.LazyStringArrayList.emptyList();
        whenAttributePossiblyPresent_ =
            com.google.protobuf.LazyStringArrayList.emptyList();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.template.soy.conformance.Conformance.internal_static_soy_Requirement_BannedHtmlTag_descriptor;
      }

      @java.lang.Override
      public com.google.template.soy.conformance.Requirement.BannedHtmlTag getDefaultInstanceForType() {
        return com.google.template.soy.conformance.Requirement.BannedHtmlTag.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.template.soy.conformance.Requirement.BannedHtmlTag build() {
        com.google.template.soy.conformance.Requirement.BannedHtmlTag result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.template.soy.conformance.Requirement.BannedHtmlTag buildPartial() {
        com.google.template.soy.conformance.Requirement.BannedHtmlTag result = new com.google.template.soy.conformance.Requirement.BannedHtmlTag(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.google.template.soy.conformance.Requirement.BannedHtmlTag result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          tag_.makeImmutable();
          result.tag_ = tag_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          whenAttributePossiblyPresent_.makeImmutable();
          result.whenAttributePossiblyPresent_ = whenAttributePossiblyPresent_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.template.soy.conformance.Requirement.BannedHtmlTag) {
          return mergeFrom((com.google.template.soy.conformance.Requirement.BannedHtmlTag)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.template.soy.conformance.Requirement.BannedHtmlTag other) {
        if (other == com.google.template.soy.conformance.Requirement.BannedHtmlTag.getDefaultInstance()) return this;
        if (!other.tag_.isEmpty()) {
          if (tag_.isEmpty()) {
            tag_ = other.tag_;
            bitField0_ |= 0x00000001;
          } else {
            ensureTagIsMutable();
            tag_.addAll(other.tag_);
          }
          onChanged();
        }
        if (!other.whenAttributePossiblyPresent_.isEmpty()) {
          if (whenAttributePossiblyPresent_.isEmpty()) {
            whenAttributePossiblyPresent_ = other.whenAttributePossiblyPresent_;
            bitField0_ |= 0x00000002;
          } else {
            ensureWhenAttributePossiblyPresentIsMutable();
            whenAttributePossiblyPresent_.addAll(other.whenAttributePossiblyPresent_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();
                ensureTagIsMutable();
                tag_.add(s);
                break;
              } // case 10
              case 18: {
                java.lang.String s = input.readStringRequireUtf8();
                ensureWhenAttributePossiblyPresentIsMutable();
                whenAttributePossiblyPresent_.add(s);
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.LazyStringArrayList tag_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      private void ensureTagIsMutable() {
        if (!tag_.isModifiable()) {
          tag_ = new com.google.protobuf.LazyStringArrayList(tag_);
        }
        bitField0_ |= 0x00000001;
      }
      /**
       * <pre>
       * The banned HTML tag (lowercase).
       * </pre>
       *
       * <code>repeated string tag = 1;</code>
       * @return A list containing the tag.
       */
      public com.google.protobuf.ProtocolStringList
          getTagList() {
        tag_.makeImmutable();
        return tag_;
      }
      /**
       * <pre>
       * The banned HTML tag (lowercase).
       * </pre>
       *
       * <code>repeated string tag = 1;</code>
       * @return The count of tag.
       */
      public int getTagCount() {
        return tag_.size();
      }
      /**
       * <pre>
       * The banned HTML tag (lowercase).
       * </pre>
       *
       * <code>repeated string tag = 1;</code>
       * @param index The index of the element to return.
       * @return The tag at the given index.
       */
      public java.lang.String getTag(int index) {
        return tag_.get(index);
      }
      /**
       * <pre>
       * The banned HTML tag (lowercase).
       * </pre>
       *
       * <code>repeated string tag = 1;</code>
       * @param index The index of the value to return.
       * @return The bytes of the tag at the given index.
       */
      public com.google.protobuf.ByteString
          getTagBytes(int index) {
        return tag_.getByteString(index);
      }
      /**
       * <pre>
       * The banned HTML tag (lowercase).
       * </pre>
       *
       * <code>repeated string tag = 1;</code>
       * @param index The index to set the value at.
       * @param value The tag to set.
       * @return This builder for chaining.
       */
      public Builder setTag(
          int index, java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureTagIsMutable();
        tag_.set(index, value);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The banned HTML tag (lowercase).
       * </pre>
       *
       * <code>repeated string tag = 1;</code>
       * @param value The tag to add.
       * @return This builder for chaining.
       */
      public Builder addTag(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureTagIsMutable();
        tag_.add(value);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The banned HTML tag (lowercase).
       * </pre>
       *
       * <code>repeated string tag = 1;</code>
       * @param values The tag to add.
       * @return This builder for chaining.
       */
      public Builder addAllTag(
          java.lang.Iterable<java.lang.String> values) {
        ensureTagIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, tag_);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The banned HTML tag (lowercase).
       * </pre>
       *
       * <code>repeated string tag = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTag() {
        tag_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The banned HTML tag (lowercase).
       * </pre>
       *
       * <code>repeated string tag = 1;</code>
       * @param value The bytes of the tag to add.
       * @return This builder for chaining.
       */
      public Builder addTagBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        ensureTagIsMutable();
        tag_.add(value);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringArrayList whenAttributePossiblyPresent_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      private void ensureWhenAttributePossiblyPresentIsMutable() {
        if (!whenAttributePossiblyPresent_.isModifiable()) {
          whenAttributePossiblyPresent_ = new com.google.protobuf.LazyStringArrayList(whenAttributePossiblyPresent_);
        }
        bitField0_ |= 0x00000002;
      }
      /**
       * <pre>
       * If provided, then it will only ban tags that have all these attributes.
       * </pre>
       *
       * <code>repeated string when_attribute_possibly_present = 2;</code>
       * @return A list containing the whenAttributePossiblyPresent.
       */
      public com.google.protobuf.ProtocolStringList
          getWhenAttributePossiblyPresentList() {
        whenAttributePossiblyPresent_.makeImmutable();
        return whenAttributePossiblyPresent_;
      }
      /**
       * <pre>
       * If provided, then it will only ban tags that have all these attributes.
       * </pre>
       *
       * <code>repeated string when_attribute_possibly_present = 2;</code>
       * @return The count of whenAttributePossiblyPresent.
       */
      public int getWhenAttributePossiblyPresentCount() {
        return whenAttributePossiblyPresent_.size();
      }
      /**
       * <pre>
       * If provided, then it will only ban tags that have all these attributes.
       * </pre>
       *
       * <code>repeated string when_attribute_possibly_present = 2;</code>
       * @param index The index of the element to return.
       * @return The whenAttributePossiblyPresent at the given index.
       */
      public java.lang.String getWhenAttributePossiblyPresent(int index) {
        return whenAttributePossiblyPresent_.get(index);
      }
      /**
       * <pre>
       * If provided, then it will only ban tags that have all these attributes.
       * </pre>
       *
       * <code>repeated string when_attribute_possibly_present = 2;</code>
       * @param index The index of the value to return.
       * @return The bytes of the whenAttributePossiblyPresent at the given index.
       */
      public com.google.protobuf.ByteString
          getWhenAttributePossiblyPresentBytes(int index) {
        return whenAttributePossiblyPresent_.getByteString(index);
      }
      /**
       * <pre>
       * If provided, then it will only ban tags that have all these attributes.
       * </pre>
       *
       * <code>repeated string when_attribute_possibly_present = 2;</code>
       * @param index The index to set the value at.
       * @param value The whenAttributePossiblyPresent to set.
       * @return This builder for chaining.
       */
      public Builder setWhenAttributePossiblyPresent(
          int index, java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureWhenAttributePossiblyPresentIsMutable();
        whenAttributePossiblyPresent_.set(index, value);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If provided, then it will only ban tags that have all these attributes.
       * </pre>
       *
       * <code>repeated string when_attribute_possibly_present = 2;</code>
       * @param value The whenAttributePossiblyPresent to add.
       * @return This builder for chaining.
       */
      public Builder addWhenAttributePossiblyPresent(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureWhenAttributePossiblyPresentIsMutable();
        whenAttributePossiblyPresent_.add(value);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If provided, then it will only ban tags that have all these attributes.
       * </pre>
       *
       * <code>repeated string when_attribute_possibly_present = 2;</code>
       * @param values The whenAttributePossiblyPresent to add.
       * @return This builder for chaining.
       */
      public Builder addAllWhenAttributePossiblyPresent(
          java.lang.Iterable<java.lang.String> values) {
        ensureWhenAttributePossiblyPresentIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, whenAttributePossiblyPresent_);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If provided, then it will only ban tags that have all these attributes.
       * </pre>
       *
       * <code>repeated string when_attribute_possibly_present = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearWhenAttributePossiblyPresent() {
        whenAttributePossiblyPresent_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If provided, then it will only ban tags that have all these attributes.
       * </pre>
       *
       * <code>repeated string when_attribute_possibly_present = 2;</code>
       * @param value The bytes of the whenAttributePossiblyPresent to add.
       * @return This builder for chaining.
       */
      public Builder addWhenAttributePossiblyPresentBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        ensureWhenAttributePossiblyPresentIsMutable();
        whenAttributePossiblyPresent_.add(value);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:soy.Requirement.BannedHtmlTag)
    }

    // @@protoc_insertion_point(class_scope:soy.Requirement.BannedHtmlTag)
    private static final com.google.template.soy.conformance.Requirement.BannedHtmlTag DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.template.soy.conformance.Requirement.BannedHtmlTag();
    }

    public static com.google.template.soy.conformance.Requirement.BannedHtmlTag getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BannedHtmlTag>
        PARSER = new com.google.protobuf.AbstractParser<BannedHtmlTag>() {
      @java.lang.Override
      public BannedHtmlTag parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<BannedHtmlTag> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BannedHtmlTag> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.template.soy.conformance.Requirement.BannedHtmlTag getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BanXidForCssObfuscationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:soy.Requirement.BanXidForCssObfuscation)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   * Bans the usage of xid for css obfuscation
   * </pre>
   *
   * Protobuf type {@code soy.Requirement.BanXidForCssObfuscation}
   */
  public static final class BanXidForCssObfuscation extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:soy.Requirement.BanXidForCssObfuscation)
      BanXidForCssObfuscationOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        BanXidForCssObfuscation.class.getName());
    }
    // Use BanXidForCssObfuscation.newBuilder() to construct.
    private BanXidForCssObfuscation(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private BanXidForCssObfuscation() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.template.soy.conformance.Conformance.internal_static_soy_Requirement_BanXidForCssObfuscation_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.template.soy.conformance.Conformance.internal_static_soy_Requirement_BanXidForCssObfuscation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.template.soy.conformance.Requirement.BanXidForCssObfuscation.class, com.google.template.soy.conformance.Requirement.BanXidForCssObfuscation.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.template.soy.conformance.Requirement.BanXidForCssObfuscation)) {
        return super.equals(obj);
      }
      com.google.template.soy.conformance.Requirement.BanXidForCssObfuscation other = (com.google.template.soy.conformance.Requirement.BanXidForCssObfuscation) obj;

      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.template.soy.conformance.Requirement.BanXidForCssObfuscation parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.template.soy.conformance.Requirement.BanXidForCssObfuscation parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.template.soy.conformance.Requirement.BanXidForCssObfuscation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.template.soy.conformance.Requirement.BanXidForCssObfuscation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.template.soy.conformance.Requirement.BanXidForCssObfuscation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.template.soy.conformance.Requirement.BanXidForCssObfuscation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.template.soy.conformance.Requirement.BanXidForCssObfuscation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.google.template.soy.conformance.Requirement.BanXidForCssObfuscation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.google.template.soy.conformance.Requirement.BanXidForCssObfuscation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.template.soy.conformance.Requirement.BanXidForCssObfuscation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.template.soy.conformance.Requirement.BanXidForCssObfuscation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.google.template.soy.conformance.Requirement.BanXidForCssObfuscation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.template.soy.conformance.Requirement.BanXidForCssObfuscation prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Bans the usage of xid for css obfuscation
     * </pre>
     *
     * Protobuf type {@code soy.Requirement.BanXidForCssObfuscation}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:soy.Requirement.BanXidForCssObfuscation)
        com.google.template.soy.conformance.Requirement.BanXidForCssObfuscationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.template.soy.conformance.Conformance.internal_static_soy_Requirement_BanXidForCssObfuscation_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.template.soy.conformance.Conformance.internal_static_soy_Requirement_BanXidForCssObfuscation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.template.soy.conformance.Requirement.BanXidForCssObfuscation.class, com.google.template.soy.conformance.Requirement.BanXidForCssObfuscation.Builder.class);
      }

      // Construct using com.google.template.soy.conformance.Requirement.BanXidForCssObfuscation.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.template.soy.conformance.Conformance.internal_static_soy_Requirement_BanXidForCssObfuscation_descriptor;
      }

      @java.lang.Override
      public com.google.template.soy.conformance.Requirement.BanXidForCssObfuscation getDefaultInstanceForType() {
        return com.google.template.soy.conformance.Requirement.BanXidForCssObfuscation.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.template.soy.conformance.Requirement.BanXidForCssObfuscation build() {
        com.google.template.soy.conformance.Requirement.BanXidForCssObfuscation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.template.soy.conformance.Requirement.BanXidForCssObfuscation buildPartial() {
        com.google.template.soy.conformance.Requirement.BanXidForCssObfuscation result = new com.google.template.soy.conformance.Requirement.BanXidForCssObfuscation(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.template.soy.conformance.Requirement.BanXidForCssObfuscation) {
          return mergeFrom((com.google.template.soy.conformance.Requirement.BanXidForCssObfuscation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.template.soy.conformance.Requirement.BanXidForCssObfuscation other) {
        if (other == com.google.template.soy.conformance.Requirement.BanXidForCssObfuscation.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      // @@protoc_insertion_point(builder_scope:soy.Requirement.BanXidForCssObfuscation)
    }

    // @@protoc_insertion_point(class_scope:soy.Requirement.BanXidForCssObfuscation)
    private static final com.google.template.soy.conformance.Requirement.BanXidForCssObfuscation DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.template.soy.conformance.Requirement.BanXidForCssObfuscation();
    }

    public static com.google.template.soy.conformance.Requirement.BanXidForCssObfuscation getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BanXidForCssObfuscation>
        PARSER = new com.google.protobuf.AbstractParser<BanXidForCssObfuscation>() {
      @java.lang.Override
      public BanXidForCssObfuscation parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<BanXidForCssObfuscation> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BanXidForCssObfuscation> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.template.soy.conformance.Requirement.BanXidForCssObfuscation getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CustomOrBuilder extends
      // @@protoc_insertion_point(interface_extends:soy.Requirement.Custom)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Required: the fully-qualified name of the Java class providing the
     * custom conformance check. The class must implement
     * com.google.template.soy.conformance.Rule.
     * </pre>
     *
     * <code>string java_class = 1;</code>
     * @return The javaClass.
     */
    java.lang.String getJavaClass();
    /**
     * <pre>
     * Required: the fully-qualified name of the Java class providing the
     * custom conformance check. The class must implement
     * com.google.template.soy.conformance.Rule.
     * </pre>
     *
     * <code>string java_class = 1;</code>
     * @return The bytes for javaClass.
     */
    com.google.protobuf.ByteString
        getJavaClassBytes();
  }
  /**
   * Protobuf type {@code soy.Requirement.Custom}
   */
  public static final class Custom extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:soy.Requirement.Custom)
      CustomOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        Custom.class.getName());
    }
    // Use Custom.newBuilder() to construct.
    private Custom(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Custom() {
      javaClass_ = "";
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.template.soy.conformance.Conformance.internal_static_soy_Requirement_Custom_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.template.soy.conformance.Conformance.internal_static_soy_Requirement_Custom_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.template.soy.conformance.Requirement.Custom.class, com.google.template.soy.conformance.Requirement.Custom.Builder.class);
    }

    public static final int JAVA_CLASS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object javaClass_ = "";
    /**
     * <pre>
     * Required: the fully-qualified name of the Java class providing the
     * custom conformance check. The class must implement
     * com.google.template.soy.conformance.Rule.
     * </pre>
     *
     * <code>string java_class = 1;</code>
     * @return The javaClass.
     */
    @java.lang.Override
    public java.lang.String getJavaClass() {
      java.lang.Object ref = javaClass_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        javaClass_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Required: the fully-qualified name of the Java class providing the
     * custom conformance check. The class must implement
     * com.google.template.soy.conformance.Rule.
     * </pre>
     *
     * <code>string java_class = 1;</code>
     * @return The bytes for javaClass.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getJavaClassBytes() {
      java.lang.Object ref = javaClass_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        javaClass_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(javaClass_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, javaClass_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(javaClass_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, javaClass_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.template.soy.conformance.Requirement.Custom)) {
        return super.equals(obj);
      }
      com.google.template.soy.conformance.Requirement.Custom other = (com.google.template.soy.conformance.Requirement.Custom) obj;

      if (!getJavaClass()
          .equals(other.getJavaClass())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + JAVA_CLASS_FIELD_NUMBER;
      hash = (53 * hash) + getJavaClass().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.template.soy.conformance.Requirement.Custom parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.template.soy.conformance.Requirement.Custom parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.template.soy.conformance.Requirement.Custom parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.template.soy.conformance.Requirement.Custom parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.template.soy.conformance.Requirement.Custom parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.template.soy.conformance.Requirement.Custom parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.template.soy.conformance.Requirement.Custom parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.google.template.soy.conformance.Requirement.Custom parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.google.template.soy.conformance.Requirement.Custom parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.template.soy.conformance.Requirement.Custom parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.template.soy.conformance.Requirement.Custom parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.google.template.soy.conformance.Requirement.Custom parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.template.soy.conformance.Requirement.Custom prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code soy.Requirement.Custom}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:soy.Requirement.Custom)
        com.google.template.soy.conformance.Requirement.CustomOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.template.soy.conformance.Conformance.internal_static_soy_Requirement_Custom_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.template.soy.conformance.Conformance.internal_static_soy_Requirement_Custom_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.template.soy.conformance.Requirement.Custom.class, com.google.template.soy.conformance.Requirement.Custom.Builder.class);
      }

      // Construct using com.google.template.soy.conformance.Requirement.Custom.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        javaClass_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.template.soy.conformance.Conformance.internal_static_soy_Requirement_Custom_descriptor;
      }

      @java.lang.Override
      public com.google.template.soy.conformance.Requirement.Custom getDefaultInstanceForType() {
        return com.google.template.soy.conformance.Requirement.Custom.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.template.soy.conformance.Requirement.Custom build() {
        com.google.template.soy.conformance.Requirement.Custom result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.template.soy.conformance.Requirement.Custom buildPartial() {
        com.google.template.soy.conformance.Requirement.Custom result = new com.google.template.soy.conformance.Requirement.Custom(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.google.template.soy.conformance.Requirement.Custom result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.javaClass_ = javaClass_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.template.soy.conformance.Requirement.Custom) {
          return mergeFrom((com.google.template.soy.conformance.Requirement.Custom)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.template.soy.conformance.Requirement.Custom other) {
        if (other == com.google.template.soy.conformance.Requirement.Custom.getDefaultInstance()) return this;
        if (!other.getJavaClass().isEmpty()) {
          javaClass_ = other.javaClass_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                javaClass_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object javaClass_ = "";
      /**
       * <pre>
       * Required: the fully-qualified name of the Java class providing the
       * custom conformance check. The class must implement
       * com.google.template.soy.conformance.Rule.
       * </pre>
       *
       * <code>string java_class = 1;</code>
       * @return The javaClass.
       */
      public java.lang.String getJavaClass() {
        java.lang.Object ref = javaClass_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          javaClass_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Required: the fully-qualified name of the Java class providing the
       * custom conformance check. The class must implement
       * com.google.template.soy.conformance.Rule.
       * </pre>
       *
       * <code>string java_class = 1;</code>
       * @return The bytes for javaClass.
       */
      public com.google.protobuf.ByteString
          getJavaClassBytes() {
        java.lang.Object ref = javaClass_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          javaClass_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Required: the fully-qualified name of the Java class providing the
       * custom conformance check. The class must implement
       * com.google.template.soy.conformance.Rule.
       * </pre>
       *
       * <code>string java_class = 1;</code>
       * @param value The javaClass to set.
       * @return This builder for chaining.
       */
      public Builder setJavaClass(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        javaClass_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Required: the fully-qualified name of the Java class providing the
       * custom conformance check. The class must implement
       * com.google.template.soy.conformance.Rule.
       * </pre>
       *
       * <code>string java_class = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearJavaClass() {
        javaClass_ = getDefaultInstance().getJavaClass();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Required: the fully-qualified name of the Java class providing the
       * custom conformance check. The class must implement
       * com.google.template.soy.conformance.Rule.
       * </pre>
       *
       * <code>string java_class = 1;</code>
       * @param value The bytes for javaClass to set.
       * @return This builder for chaining.
       */
      public Builder setJavaClassBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        javaClass_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:soy.Requirement.Custom)
    }

    // @@protoc_insertion_point(class_scope:soy.Requirement.Custom)
    private static final com.google.template.soy.conformance.Requirement.Custom DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.template.soy.conformance.Requirement.Custom();
    }

    public static com.google.template.soy.conformance.Requirement.Custom getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Custom>
        PARSER = new com.google.protobuf.AbstractParser<Custom>() {
      @java.lang.Override
      public Custom parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Custom> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Custom> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.template.soy.conformance.Requirement.Custom getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private int requirementTypeCase_ = 0;
  @SuppressWarnings("serial")
  private java.lang.Object requirementType_;
  public enum RequirementTypeCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    BANNED_CSS_SELECTOR(2),
    BANNED_FUNCTION(3),
    BANNED_DIRECTIVE(4),
    BANNED_RAW_TEXT(5),
    CUSTOM(7),
    BANNED_HTML_TAG(11),
    BAN_XID_FOR_CSS_OBFUSCATION(14),
    REQUIREMENTTYPE_NOT_SET(0);
    private final int value;
    private RequirementTypeCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RequirementTypeCase valueOf(int value) {
      return forNumber(value);
    }

    public static RequirementTypeCase forNumber(int value) {
      switch (value) {
        case 2: return BANNED_CSS_SELECTOR;
        case 3: return BANNED_FUNCTION;
        case 4: return BANNED_DIRECTIVE;
        case 5: return BANNED_RAW_TEXT;
        case 7: return CUSTOM;
        case 11: return BANNED_HTML_TAG;
        case 14: return BAN_XID_FOR_CSS_OBFUSCATION;
        case 0: return REQUIREMENTTYPE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public RequirementTypeCase
  getRequirementTypeCase() {
    return RequirementTypeCase.forNumber(
        requirementTypeCase_);
  }

  public static final int BANNED_CSS_SELECTOR_FIELD_NUMBER = 2;
  /**
   * <code>.soy.Requirement.BannedCssSelector banned_css_selector = 2;</code>
   * @return Whether the bannedCssSelector field is set.
   */
  @java.lang.Override
  public boolean hasBannedCssSelector() {
    return requirementTypeCase_ == 2;
  }
  /**
   * <code>.soy.Requirement.BannedCssSelector banned_css_selector = 2;</code>
   * @return The bannedCssSelector.
   */
  @java.lang.Override
  public com.google.template.soy.conformance.Requirement.BannedCssSelector getBannedCssSelector() {
    if (requirementTypeCase_ == 2) {
       return (com.google.template.soy.conformance.Requirement.BannedCssSelector) requirementType_;
    }
    return com.google.template.soy.conformance.Requirement.BannedCssSelector.getDefaultInstance();
  }
  /**
   * <code>.soy.Requirement.BannedCssSelector banned_css_selector = 2;</code>
   */
  @java.lang.Override
  public com.google.template.soy.conformance.Requirement.BannedCssSelectorOrBuilder getBannedCssSelectorOrBuilder() {
    if (requirementTypeCase_ == 2) {
       return (com.google.template.soy.conformance.Requirement.BannedCssSelector) requirementType_;
    }
    return com.google.template.soy.conformance.Requirement.BannedCssSelector.getDefaultInstance();
  }

  public static final int BANNED_FUNCTION_FIELD_NUMBER = 3;
  /**
   * <code>.soy.Requirement.BannedFunction banned_function = 3;</code>
   * @return Whether the bannedFunction field is set.
   */
  @java.lang.Override
  public boolean hasBannedFunction() {
    return requirementTypeCase_ == 3;
  }
  /**
   * <code>.soy.Requirement.BannedFunction banned_function = 3;</code>
   * @return The bannedFunction.
   */
  @java.lang.Override
  public com.google.template.soy.conformance.Requirement.BannedFunction getBannedFunction() {
    if (requirementTypeCase_ == 3) {
       return (com.google.template.soy.conformance.Requirement.BannedFunction) requirementType_;
    }
    return com.google.template.soy.conformance.Requirement.BannedFunction.getDefaultInstance();
  }
  /**
   * <code>.soy.Requirement.BannedFunction banned_function = 3;</code>
   */
  @java.lang.Override
  public com.google.template.soy.conformance.Requirement.BannedFunctionOrBuilder getBannedFunctionOrBuilder() {
    if (requirementTypeCase_ == 3) {
       return (com.google.template.soy.conformance.Requirement.BannedFunction) requirementType_;
    }
    return com.google.template.soy.conformance.Requirement.BannedFunction.getDefaultInstance();
  }

  public static final int BANNED_DIRECTIVE_FIELD_NUMBER = 4;
  /**
   * <code>.soy.Requirement.BannedDirective banned_directive = 4;</code>
   * @return Whether the bannedDirective field is set.
   */
  @java.lang.Override
  public boolean hasBannedDirective() {
    return requirementTypeCase_ == 4;
  }
  /**
   * <code>.soy.Requirement.BannedDirective banned_directive = 4;</code>
   * @return The bannedDirective.
   */
  @java.lang.Override
  public com.google.template.soy.conformance.Requirement.BannedDirective getBannedDirective() {
    if (requirementTypeCase_ == 4) {
       return (com.google.template.soy.conformance.Requirement.BannedDirective) requirementType_;
    }
    return com.google.template.soy.conformance.Requirement.BannedDirective.getDefaultInstance();
  }
  /**
   * <code>.soy.Requirement.BannedDirective banned_directive = 4;</code>
   */
  @java.lang.Override
  public com.google.template.soy.conformance.Requirement.BannedDirectiveOrBuilder getBannedDirectiveOrBuilder() {
    if (requirementTypeCase_ == 4) {
       return (com.google.template.soy.conformance.Requirement.BannedDirective) requirementType_;
    }
    return com.google.template.soy.conformance.Requirement.BannedDirective.getDefaultInstance();
  }

  public static final int BANNED_RAW_TEXT_FIELD_NUMBER = 5;
  /**
   * <code>.soy.Requirement.BannedRawText banned_raw_text = 5;</code>
   * @return Whether the bannedRawText field is set.
   */
  @java.lang.Override
  public boolean hasBannedRawText() {
    return requirementTypeCase_ == 5;
  }
  /**
   * <code>.soy.Requirement.BannedRawText banned_raw_text = 5;</code>
   * @return The bannedRawText.
   */
  @java.lang.Override
  public com.google.template.soy.conformance.Requirement.BannedRawText getBannedRawText() {
    if (requirementTypeCase_ == 5) {
       return (com.google.template.soy.conformance.Requirement.BannedRawText) requirementType_;
    }
    return com.google.template.soy.conformance.Requirement.BannedRawText.getDefaultInstance();
  }
  /**
   * <code>.soy.Requirement.BannedRawText banned_raw_text = 5;</code>
   */
  @java.lang.Override
  public com.google.template.soy.conformance.Requirement.BannedRawTextOrBuilder getBannedRawTextOrBuilder() {
    if (requirementTypeCase_ == 5) {
       return (com.google.template.soy.conformance.Requirement.BannedRawText) requirementType_;
    }
    return com.google.template.soy.conformance.Requirement.BannedRawText.getDefaultInstance();
  }

  public static final int CUSTOM_FIELD_NUMBER = 7;
  /**
   * <code>.soy.Requirement.Custom custom = 7;</code>
   * @return Whether the custom field is set.
   */
  @java.lang.Override
  public boolean hasCustom() {
    return requirementTypeCase_ == 7;
  }
  /**
   * <code>.soy.Requirement.Custom custom = 7;</code>
   * @return The custom.
   */
  @java.lang.Override
  public com.google.template.soy.conformance.Requirement.Custom getCustom() {
    if (requirementTypeCase_ == 7) {
       return (com.google.template.soy.conformance.Requirement.Custom) requirementType_;
    }
    return com.google.template.soy.conformance.Requirement.Custom.getDefaultInstance();
  }
  /**
   * <code>.soy.Requirement.Custom custom = 7;</code>
   */
  @java.lang.Override
  public com.google.template.soy.conformance.Requirement.CustomOrBuilder getCustomOrBuilder() {
    if (requirementTypeCase_ == 7) {
       return (com.google.template.soy.conformance.Requirement.Custom) requirementType_;
    }
    return com.google.template.soy.conformance.Requirement.Custom.getDefaultInstance();
  }

  public static final int BANNED_HTML_TAG_FIELD_NUMBER = 11;
  /**
   * <code>.soy.Requirement.BannedHtmlTag banned_html_tag = 11;</code>
   * @return Whether the bannedHtmlTag field is set.
   */
  @java.lang.Override
  public boolean hasBannedHtmlTag() {
    return requirementTypeCase_ == 11;
  }
  /**
   * <code>.soy.Requirement.BannedHtmlTag banned_html_tag = 11;</code>
   * @return The bannedHtmlTag.
   */
  @java.lang.Override
  public com.google.template.soy.conformance.Requirement.BannedHtmlTag getBannedHtmlTag() {
    if (requirementTypeCase_ == 11) {
       return (com.google.template.soy.conformance.Requirement.BannedHtmlTag) requirementType_;
    }
    return com.google.template.soy.conformance.Requirement.BannedHtmlTag.getDefaultInstance();
  }
  /**
   * <code>.soy.Requirement.BannedHtmlTag banned_html_tag = 11;</code>
   */
  @java.lang.Override
  public com.google.template.soy.conformance.Requirement.BannedHtmlTagOrBuilder getBannedHtmlTagOrBuilder() {
    if (requirementTypeCase_ == 11) {
       return (com.google.template.soy.conformance.Requirement.BannedHtmlTag) requirementType_;
    }
    return com.google.template.soy.conformance.Requirement.BannedHtmlTag.getDefaultInstance();
  }

  public static final int BAN_XID_FOR_CSS_OBFUSCATION_FIELD_NUMBER = 14;
  /**
   * <code>.soy.Requirement.BanXidForCssObfuscation ban_xid_for_css_obfuscation = 14;</code>
   * @return Whether the banXidForCssObfuscation field is set.
   */
  @java.lang.Override
  public boolean hasBanXidForCssObfuscation() {
    return requirementTypeCase_ == 14;
  }
  /**
   * <code>.soy.Requirement.BanXidForCssObfuscation ban_xid_for_css_obfuscation = 14;</code>
   * @return The banXidForCssObfuscation.
   */
  @java.lang.Override
  public com.google.template.soy.conformance.Requirement.BanXidForCssObfuscation getBanXidForCssObfuscation() {
    if (requirementTypeCase_ == 14) {
       return (com.google.template.soy.conformance.Requirement.BanXidForCssObfuscation) requirementType_;
    }
    return com.google.template.soy.conformance.Requirement.BanXidForCssObfuscation.getDefaultInstance();
  }
  /**
   * <code>.soy.Requirement.BanXidForCssObfuscation ban_xid_for_css_obfuscation = 14;</code>
   */
  @java.lang.Override
  public com.google.template.soy.conformance.Requirement.BanXidForCssObfuscationOrBuilder getBanXidForCssObfuscationOrBuilder() {
    if (requirementTypeCase_ == 14) {
       return (com.google.template.soy.conformance.Requirement.BanXidForCssObfuscation) requirementType_;
    }
    return com.google.template.soy.conformance.Requirement.BanXidForCssObfuscation.getDefaultInstance();
  }

  public static final int ERROR_MESSAGE_FIELD_NUMBER = 8;
  @SuppressWarnings("serial")
  private volatile java.lang.Object errorMessage_ = "";
  /**
   * <pre>
   * Required: The message to report when a requirement is violated.
   * This should reference a document describing the reason for the requirement
   * and contacts.
   * </pre>
   *
   * <code>string error_message = 8;</code>
   * @return The errorMessage.
   */
  @java.lang.Override
  public java.lang.String getErrorMessage() {
    java.lang.Object ref = errorMessage_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      errorMessage_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Required: The message to report when a requirement is violated.
   * This should reference a document describing the reason for the requirement
   * and contacts.
   * </pre>
   *
   * <code>string error_message = 8;</code>
   * @return The bytes for errorMessage.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getErrorMessageBytes() {
    java.lang.Object ref = errorMessage_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      errorMessage_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int EXEMPT_FIELD_NUMBER = 16;
  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringArrayList exempt_ =
      com.google.protobuf.LazyStringArrayList.emptyList();
  /**
   * <pre>
   * Optional: Any source path that contains a exempted substring is exempt
   * from the requirement.
   * </pre>
   *
   * <code>repeated string exempt = 16;</code>
   * @return A list containing the exempt.
   */
  public com.google.protobuf.ProtocolStringList
      getExemptList() {
    return exempt_;
  }
  /**
   * <pre>
   * Optional: Any source path that contains a exempted substring is exempt
   * from the requirement.
   * </pre>
   *
   * <code>repeated string exempt = 16;</code>
   * @return The count of exempt.
   */
  public int getExemptCount() {
    return exempt_.size();
  }
  /**
   * <pre>
   * Optional: Any source path that contains a exempted substring is exempt
   * from the requirement.
   * </pre>
   *
   * <code>repeated string exempt = 16;</code>
   * @param index The index of the element to return.
   * @return The exempt at the given index.
   */
  public java.lang.String getExempt(int index) {
    return exempt_.get(index);
  }
  /**
   * <pre>
   * Optional: Any source path that contains a exempted substring is exempt
   * from the requirement.
   * </pre>
   *
   * <code>repeated string exempt = 16;</code>
   * @param index The index of the value to return.
   * @return The bytes of the exempt at the given index.
   */
  public com.google.protobuf.ByteString
      getExemptBytes(int index) {
    return exempt_.getByteString(index);
  }

  public static final int ONLY_APPLY_TO_FIELD_NUMBER = 15;
  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringArrayList onlyApplyTo_ =
      com.google.protobuf.LazyStringArrayList.emptyList();
  /**
   * <pre>
   * Optional: A list of paths. If this field is presented, the conformance
   * test is only running for the files matching the paths specified here.
   * exmempted sources will still be exempted.
   * </pre>
   *
   * <code>repeated string only_apply_to = 15;</code>
   * @return A list containing the onlyApplyTo.
   */
  public com.google.protobuf.ProtocolStringList
      getOnlyApplyToList() {
    return onlyApplyTo_;
  }
  /**
   * <pre>
   * Optional: A list of paths. If this field is presented, the conformance
   * test is only running for the files matching the paths specified here.
   * exmempted sources will still be exempted.
   * </pre>
   *
   * <code>repeated string only_apply_to = 15;</code>
   * @return The count of onlyApplyTo.
   */
  public int getOnlyApplyToCount() {
    return onlyApplyTo_.size();
  }
  /**
   * <pre>
   * Optional: A list of paths. If this field is presented, the conformance
   * test is only running for the files matching the paths specified here.
   * exmempted sources will still be exempted.
   * </pre>
   *
   * <code>repeated string only_apply_to = 15;</code>
   * @param index The index of the element to return.
   * @return The onlyApplyTo at the given index.
   */
  public java.lang.String getOnlyApplyTo(int index) {
    return onlyApplyTo_.get(index);
  }
  /**
   * <pre>
   * Optional: A list of paths. If this field is presented, the conformance
   * test is only running for the files matching the paths specified here.
   * exmempted sources will still be exempted.
   * </pre>
   *
   * <code>repeated string only_apply_to = 15;</code>
   * @param index The index of the value to return.
   * @return The bytes of the onlyApplyTo at the given index.
   */
  public com.google.protobuf.ByteString
      getOnlyApplyToBytes(int index) {
    return onlyApplyTo_.getByteString(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (requirementTypeCase_ == 2) {
      output.writeMessage(2, (com.google.template.soy.conformance.Requirement.BannedCssSelector) requirementType_);
    }
    if (requirementTypeCase_ == 3) {
      output.writeMessage(3, (com.google.template.soy.conformance.Requirement.BannedFunction) requirementType_);
    }
    if (requirementTypeCase_ == 4) {
      output.writeMessage(4, (com.google.template.soy.conformance.Requirement.BannedDirective) requirementType_);
    }
    if (requirementTypeCase_ == 5) {
      output.writeMessage(5, (com.google.template.soy.conformance.Requirement.BannedRawText) requirementType_);
    }
    if (requirementTypeCase_ == 7) {
      output.writeMessage(7, (com.google.template.soy.conformance.Requirement.Custom) requirementType_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(errorMessage_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 8, errorMessage_);
    }
    if (requirementTypeCase_ == 11) {
      output.writeMessage(11, (com.google.template.soy.conformance.Requirement.BannedHtmlTag) requirementType_);
    }
    if (requirementTypeCase_ == 14) {
      output.writeMessage(14, (com.google.template.soy.conformance.Requirement.BanXidForCssObfuscation) requirementType_);
    }
    for (int i = 0; i < onlyApplyTo_.size(); i++) {
      com.google.protobuf.GeneratedMessage.writeString(output, 15, onlyApplyTo_.getRaw(i));
    }
    for (int i = 0; i < exempt_.size(); i++) {
      com.google.protobuf.GeneratedMessage.writeString(output, 16, exempt_.getRaw(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (requirementTypeCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (com.google.template.soy.conformance.Requirement.BannedCssSelector) requirementType_);
    }
    if (requirementTypeCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, (com.google.template.soy.conformance.Requirement.BannedFunction) requirementType_);
    }
    if (requirementTypeCase_ == 4) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, (com.google.template.soy.conformance.Requirement.BannedDirective) requirementType_);
    }
    if (requirementTypeCase_ == 5) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, (com.google.template.soy.conformance.Requirement.BannedRawText) requirementType_);
    }
    if (requirementTypeCase_ == 7) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, (com.google.template.soy.conformance.Requirement.Custom) requirementType_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(errorMessage_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(8, errorMessage_);
    }
    if (requirementTypeCase_ == 11) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(11, (com.google.template.soy.conformance.Requirement.BannedHtmlTag) requirementType_);
    }
    if (requirementTypeCase_ == 14) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(14, (com.google.template.soy.conformance.Requirement.BanXidForCssObfuscation) requirementType_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < onlyApplyTo_.size(); i++) {
        dataSize += computeStringSizeNoTag(onlyApplyTo_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getOnlyApplyToList().size();
    }
    {
      int dataSize = 0;
      for (int i = 0; i < exempt_.size(); i++) {
        dataSize += computeStringSizeNoTag(exempt_.getRaw(i));
      }
      size += dataSize;
      size += 2 * getExemptList().size();
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.template.soy.conformance.Requirement)) {
      return super.equals(obj);
    }
    com.google.template.soy.conformance.Requirement other = (com.google.template.soy.conformance.Requirement) obj;

    if (!getErrorMessage()
        .equals(other.getErrorMessage())) return false;
    if (!getExemptList()
        .equals(other.getExemptList())) return false;
    if (!getOnlyApplyToList()
        .equals(other.getOnlyApplyToList())) return false;
    if (!getRequirementTypeCase().equals(other.getRequirementTypeCase())) return false;
    switch (requirementTypeCase_) {
      case 2:
        if (!getBannedCssSelector()
            .equals(other.getBannedCssSelector())) return false;
        break;
      case 3:
        if (!getBannedFunction()
            .equals(other.getBannedFunction())) return false;
        break;
      case 4:
        if (!getBannedDirective()
            .equals(other.getBannedDirective())) return false;
        break;
      case 5:
        if (!getBannedRawText()
            .equals(other.getBannedRawText())) return false;
        break;
      case 7:
        if (!getCustom()
            .equals(other.getCustom())) return false;
        break;
      case 11:
        if (!getBannedHtmlTag()
            .equals(other.getBannedHtmlTag())) return false;
        break;
      case 14:
        if (!getBanXidForCssObfuscation()
            .equals(other.getBanXidForCssObfuscation())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + ERROR_MESSAGE_FIELD_NUMBER;
    hash = (53 * hash) + getErrorMessage().hashCode();
    if (getExemptCount() > 0) {
      hash = (37 * hash) + EXEMPT_FIELD_NUMBER;
      hash = (53 * hash) + getExemptList().hashCode();
    }
    if (getOnlyApplyToCount() > 0) {
      hash = (37 * hash) + ONLY_APPLY_TO_FIELD_NUMBER;
      hash = (53 * hash) + getOnlyApplyToList().hashCode();
    }
    switch (requirementTypeCase_) {
      case 2:
        hash = (37 * hash) + BANNED_CSS_SELECTOR_FIELD_NUMBER;
        hash = (53 * hash) + getBannedCssSelector().hashCode();
        break;
      case 3:
        hash = (37 * hash) + BANNED_FUNCTION_FIELD_NUMBER;
        hash = (53 * hash) + getBannedFunction().hashCode();
        break;
      case 4:
        hash = (37 * hash) + BANNED_DIRECTIVE_FIELD_NUMBER;
        hash = (53 * hash) + getBannedDirective().hashCode();
        break;
      case 5:
        hash = (37 * hash) + BANNED_RAW_TEXT_FIELD_NUMBER;
        hash = (53 * hash) + getBannedRawText().hashCode();
        break;
      case 7:
        hash = (37 * hash) + CUSTOM_FIELD_NUMBER;
        hash = (53 * hash) + getCustom().hashCode();
        break;
      case 11:
        hash = (37 * hash) + BANNED_HTML_TAG_FIELD_NUMBER;
        hash = (53 * hash) + getBannedHtmlTag().hashCode();
        break;
      case 14:
        hash = (37 * hash) + BAN_XID_FOR_CSS_OBFUSCATION_FIELD_NUMBER;
        hash = (53 * hash) + getBanXidForCssObfuscation().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.template.soy.conformance.Requirement parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.template.soy.conformance.Requirement parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.template.soy.conformance.Requirement parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.template.soy.conformance.Requirement parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.template.soy.conformance.Requirement parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.template.soy.conformance.Requirement parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.template.soy.conformance.Requirement parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.google.template.soy.conformance.Requirement parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.google.template.soy.conformance.Requirement parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.template.soy.conformance.Requirement parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.template.soy.conformance.Requirement parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.google.template.soy.conformance.Requirement parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.template.soy.conformance.Requirement prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * A specification of code requirements.
   * </pre>
   *
   * Protobuf type {@code soy.Requirement}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:soy.Requirement)
      com.google.template.soy.conformance.RequirementOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.template.soy.conformance.Conformance.internal_static_soy_Requirement_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.template.soy.conformance.Conformance.internal_static_soy_Requirement_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.template.soy.conformance.Requirement.class, com.google.template.soy.conformance.Requirement.Builder.class);
    }

    // Construct using com.google.template.soy.conformance.Requirement.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (bannedCssSelectorBuilder_ != null) {
        bannedCssSelectorBuilder_.clear();
      }
      if (bannedFunctionBuilder_ != null) {
        bannedFunctionBuilder_.clear();
      }
      if (bannedDirectiveBuilder_ != null) {
        bannedDirectiveBuilder_.clear();
      }
      if (bannedRawTextBuilder_ != null) {
        bannedRawTextBuilder_.clear();
      }
      if (customBuilder_ != null) {
        customBuilder_.clear();
      }
      if (bannedHtmlTagBuilder_ != null) {
        bannedHtmlTagBuilder_.clear();
      }
      if (banXidForCssObfuscationBuilder_ != null) {
        banXidForCssObfuscationBuilder_.clear();
      }
      errorMessage_ = "";
      exempt_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      onlyApplyTo_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      requirementTypeCase_ = 0;
      requirementType_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.template.soy.conformance.Conformance.internal_static_soy_Requirement_descriptor;
    }

    @java.lang.Override
    public com.google.template.soy.conformance.Requirement getDefaultInstanceForType() {
      return com.google.template.soy.conformance.Requirement.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.template.soy.conformance.Requirement build() {
      com.google.template.soy.conformance.Requirement result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.template.soy.conformance.Requirement buildPartial() {
      com.google.template.soy.conformance.Requirement result = new com.google.template.soy.conformance.Requirement(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.template.soy.conformance.Requirement result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.errorMessage_ = errorMessage_;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        exempt_.makeImmutable();
        result.exempt_ = exempt_;
      }
      if (((from_bitField0_ & 0x00000200) != 0)) {
        onlyApplyTo_.makeImmutable();
        result.onlyApplyTo_ = onlyApplyTo_;
      }
    }

    private void buildPartialOneofs(com.google.template.soy.conformance.Requirement result) {
      result.requirementTypeCase_ = requirementTypeCase_;
      result.requirementType_ = this.requirementType_;
      if (requirementTypeCase_ == 2 &&
          bannedCssSelectorBuilder_ != null) {
        result.requirementType_ = bannedCssSelectorBuilder_.build();
      }
      if (requirementTypeCase_ == 3 &&
          bannedFunctionBuilder_ != null) {
        result.requirementType_ = bannedFunctionBuilder_.build();
      }
      if (requirementTypeCase_ == 4 &&
          bannedDirectiveBuilder_ != null) {
        result.requirementType_ = bannedDirectiveBuilder_.build();
      }
      if (requirementTypeCase_ == 5 &&
          bannedRawTextBuilder_ != null) {
        result.requirementType_ = bannedRawTextBuilder_.build();
      }
      if (requirementTypeCase_ == 7 &&
          customBuilder_ != null) {
        result.requirementType_ = customBuilder_.build();
      }
      if (requirementTypeCase_ == 11 &&
          bannedHtmlTagBuilder_ != null) {
        result.requirementType_ = bannedHtmlTagBuilder_.build();
      }
      if (requirementTypeCase_ == 14 &&
          banXidForCssObfuscationBuilder_ != null) {
        result.requirementType_ = banXidForCssObfuscationBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.template.soy.conformance.Requirement) {
        return mergeFrom((com.google.template.soy.conformance.Requirement)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.template.soy.conformance.Requirement other) {
      if (other == com.google.template.soy.conformance.Requirement.getDefaultInstance()) return this;
      if (!other.getErrorMessage().isEmpty()) {
        errorMessage_ = other.errorMessage_;
        bitField0_ |= 0x00000080;
        onChanged();
      }
      if (!other.exempt_.isEmpty()) {
        if (exempt_.isEmpty()) {
          exempt_ = other.exempt_;
          bitField0_ |= 0x00000100;
        } else {
          ensureExemptIsMutable();
          exempt_.addAll(other.exempt_);
        }
        onChanged();
      }
      if (!other.onlyApplyTo_.isEmpty()) {
        if (onlyApplyTo_.isEmpty()) {
          onlyApplyTo_ = other.onlyApplyTo_;
          bitField0_ |= 0x00000200;
        } else {
          ensureOnlyApplyToIsMutable();
          onlyApplyTo_.addAll(other.onlyApplyTo_);
        }
        onChanged();
      }
      switch (other.getRequirementTypeCase()) {
        case BANNED_CSS_SELECTOR: {
          mergeBannedCssSelector(other.getBannedCssSelector());
          break;
        }
        case BANNED_FUNCTION: {
          mergeBannedFunction(other.getBannedFunction());
          break;
        }
        case BANNED_DIRECTIVE: {
          mergeBannedDirective(other.getBannedDirective());
          break;
        }
        case BANNED_RAW_TEXT: {
          mergeBannedRawText(other.getBannedRawText());
          break;
        }
        case CUSTOM: {
          mergeCustom(other.getCustom());
          break;
        }
        case BANNED_HTML_TAG: {
          mergeBannedHtmlTag(other.getBannedHtmlTag());
          break;
        }
        case BAN_XID_FOR_CSS_OBFUSCATION: {
          mergeBanXidForCssObfuscation(other.getBanXidForCssObfuscation());
          break;
        }
        case REQUIREMENTTYPE_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 18: {
              input.readMessage(
                  getBannedCssSelectorFieldBuilder().getBuilder(),
                  extensionRegistry);
              requirementTypeCase_ = 2;
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getBannedFunctionFieldBuilder().getBuilder(),
                  extensionRegistry);
              requirementTypeCase_ = 3;
              break;
            } // case 26
            case 34: {
              input.readMessage(
                  getBannedDirectiveFieldBuilder().getBuilder(),
                  extensionRegistry);
              requirementTypeCase_ = 4;
              break;
            } // case 34
            case 42: {
              input.readMessage(
                  getBannedRawTextFieldBuilder().getBuilder(),
                  extensionRegistry);
              requirementTypeCase_ = 5;
              break;
            } // case 42
            case 58: {
              input.readMessage(
                  getCustomFieldBuilder().getBuilder(),
                  extensionRegistry);
              requirementTypeCase_ = 7;
              break;
            } // case 58
            case 66: {
              errorMessage_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000080;
              break;
            } // case 66
            case 90: {
              input.readMessage(
                  getBannedHtmlTagFieldBuilder().getBuilder(),
                  extensionRegistry);
              requirementTypeCase_ = 11;
              break;
            } // case 90
            case 114: {
              input.readMessage(
                  getBanXidForCssObfuscationFieldBuilder().getBuilder(),
                  extensionRegistry);
              requirementTypeCase_ = 14;
              break;
            } // case 114
            case 122: {
              java.lang.String s = input.readStringRequireUtf8();
              ensureOnlyApplyToIsMutable();
              onlyApplyTo_.add(s);
              break;
            } // case 122
            case 130: {
              java.lang.String s = input.readStringRequireUtf8();
              ensureExemptIsMutable();
              exempt_.add(s);
              break;
            } // case 130
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int requirementTypeCase_ = 0;
    private java.lang.Object requirementType_;
    public RequirementTypeCase
        getRequirementTypeCase() {
      return RequirementTypeCase.forNumber(
          requirementTypeCase_);
    }

    public Builder clearRequirementType() {
      requirementTypeCase_ = 0;
      requirementType_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private com.google.protobuf.SingleFieldBuilder<
        com.google.template.soy.conformance.Requirement.BannedCssSelector, com.google.template.soy.conformance.Requirement.BannedCssSelector.Builder, com.google.template.soy.conformance.Requirement.BannedCssSelectorOrBuilder> bannedCssSelectorBuilder_;
    /**
     * <code>.soy.Requirement.BannedCssSelector banned_css_selector = 2;</code>
     * @return Whether the bannedCssSelector field is set.
     */
    @java.lang.Override
    public boolean hasBannedCssSelector() {
      return requirementTypeCase_ == 2;
    }
    /**
     * <code>.soy.Requirement.BannedCssSelector banned_css_selector = 2;</code>
     * @return The bannedCssSelector.
     */
    @java.lang.Override
    public com.google.template.soy.conformance.Requirement.BannedCssSelector getBannedCssSelector() {
      if (bannedCssSelectorBuilder_ == null) {
        if (requirementTypeCase_ == 2) {
          return (com.google.template.soy.conformance.Requirement.BannedCssSelector) requirementType_;
        }
        return com.google.template.soy.conformance.Requirement.BannedCssSelector.getDefaultInstance();
      } else {
        if (requirementTypeCase_ == 2) {
          return bannedCssSelectorBuilder_.getMessage();
        }
        return com.google.template.soy.conformance.Requirement.BannedCssSelector.getDefaultInstance();
      }
    }
    /**
     * <code>.soy.Requirement.BannedCssSelector banned_css_selector = 2;</code>
     */
    public Builder setBannedCssSelector(com.google.template.soy.conformance.Requirement.BannedCssSelector value) {
      if (bannedCssSelectorBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        requirementType_ = value;
        onChanged();
      } else {
        bannedCssSelectorBuilder_.setMessage(value);
      }
      requirementTypeCase_ = 2;
      return this;
    }
    /**
     * <code>.soy.Requirement.BannedCssSelector banned_css_selector = 2;</code>
     */
    public Builder setBannedCssSelector(
        com.google.template.soy.conformance.Requirement.BannedCssSelector.Builder builderForValue) {
      if (bannedCssSelectorBuilder_ == null) {
        requirementType_ = builderForValue.build();
        onChanged();
      } else {
        bannedCssSelectorBuilder_.setMessage(builderForValue.build());
      }
      requirementTypeCase_ = 2;
      return this;
    }
    /**
     * <code>.soy.Requirement.BannedCssSelector banned_css_selector = 2;</code>
     */
    public Builder mergeBannedCssSelector(com.google.template.soy.conformance.Requirement.BannedCssSelector value) {
      if (bannedCssSelectorBuilder_ == null) {
        if (requirementTypeCase_ == 2 &&
            requirementType_ != com.google.template.soy.conformance.Requirement.BannedCssSelector.getDefaultInstance()) {
          requirementType_ = com.google.template.soy.conformance.Requirement.BannedCssSelector.newBuilder((com.google.template.soy.conformance.Requirement.BannedCssSelector) requirementType_)
              .mergeFrom(value).buildPartial();
        } else {
          requirementType_ = value;
        }
        onChanged();
      } else {
        if (requirementTypeCase_ == 2) {
          bannedCssSelectorBuilder_.mergeFrom(value);
        } else {
          bannedCssSelectorBuilder_.setMessage(value);
        }
      }
      requirementTypeCase_ = 2;
      return this;
    }
    /**
     * <code>.soy.Requirement.BannedCssSelector banned_css_selector = 2;</code>
     */
    public Builder clearBannedCssSelector() {
      if (bannedCssSelectorBuilder_ == null) {
        if (requirementTypeCase_ == 2) {
          requirementTypeCase_ = 0;
          requirementType_ = null;
          onChanged();
        }
      } else {
        if (requirementTypeCase_ == 2) {
          requirementTypeCase_ = 0;
          requirementType_ = null;
        }
        bannedCssSelectorBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.soy.Requirement.BannedCssSelector banned_css_selector = 2;</code>
     */
    public com.google.template.soy.conformance.Requirement.BannedCssSelector.Builder getBannedCssSelectorBuilder() {
      return getBannedCssSelectorFieldBuilder().getBuilder();
    }
    /**
     * <code>.soy.Requirement.BannedCssSelector banned_css_selector = 2;</code>
     */
    @java.lang.Override
    public com.google.template.soy.conformance.Requirement.BannedCssSelectorOrBuilder getBannedCssSelectorOrBuilder() {
      if ((requirementTypeCase_ == 2) && (bannedCssSelectorBuilder_ != null)) {
        return bannedCssSelectorBuilder_.getMessageOrBuilder();
      } else {
        if (requirementTypeCase_ == 2) {
          return (com.google.template.soy.conformance.Requirement.BannedCssSelector) requirementType_;
        }
        return com.google.template.soy.conformance.Requirement.BannedCssSelector.getDefaultInstance();
      }
    }
    /**
     * <code>.soy.Requirement.BannedCssSelector banned_css_selector = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.google.template.soy.conformance.Requirement.BannedCssSelector, com.google.template.soy.conformance.Requirement.BannedCssSelector.Builder, com.google.template.soy.conformance.Requirement.BannedCssSelectorOrBuilder> 
        getBannedCssSelectorFieldBuilder() {
      if (bannedCssSelectorBuilder_ == null) {
        if (!(requirementTypeCase_ == 2)) {
          requirementType_ = com.google.template.soy.conformance.Requirement.BannedCssSelector.getDefaultInstance();
        }
        bannedCssSelectorBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.google.template.soy.conformance.Requirement.BannedCssSelector, com.google.template.soy.conformance.Requirement.BannedCssSelector.Builder, com.google.template.soy.conformance.Requirement.BannedCssSelectorOrBuilder>(
                (com.google.template.soy.conformance.Requirement.BannedCssSelector) requirementType_,
                getParentForChildren(),
                isClean());
        requirementType_ = null;
      }
      requirementTypeCase_ = 2;
      onChanged();
      return bannedCssSelectorBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.google.template.soy.conformance.Requirement.BannedFunction, com.google.template.soy.conformance.Requirement.BannedFunction.Builder, com.google.template.soy.conformance.Requirement.BannedFunctionOrBuilder> bannedFunctionBuilder_;
    /**
     * <code>.soy.Requirement.BannedFunction banned_function = 3;</code>
     * @return Whether the bannedFunction field is set.
     */
    @java.lang.Override
    public boolean hasBannedFunction() {
      return requirementTypeCase_ == 3;
    }
    /**
     * <code>.soy.Requirement.BannedFunction banned_function = 3;</code>
     * @return The bannedFunction.
     */
    @java.lang.Override
    public com.google.template.soy.conformance.Requirement.BannedFunction getBannedFunction() {
      if (bannedFunctionBuilder_ == null) {
        if (requirementTypeCase_ == 3) {
          return (com.google.template.soy.conformance.Requirement.BannedFunction) requirementType_;
        }
        return com.google.template.soy.conformance.Requirement.BannedFunction.getDefaultInstance();
      } else {
        if (requirementTypeCase_ == 3) {
          return bannedFunctionBuilder_.getMessage();
        }
        return com.google.template.soy.conformance.Requirement.BannedFunction.getDefaultInstance();
      }
    }
    /**
     * <code>.soy.Requirement.BannedFunction banned_function = 3;</code>
     */
    public Builder setBannedFunction(com.google.template.soy.conformance.Requirement.BannedFunction value) {
      if (bannedFunctionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        requirementType_ = value;
        onChanged();
      } else {
        bannedFunctionBuilder_.setMessage(value);
      }
      requirementTypeCase_ = 3;
      return this;
    }
    /**
     * <code>.soy.Requirement.BannedFunction banned_function = 3;</code>
     */
    public Builder setBannedFunction(
        com.google.template.soy.conformance.Requirement.BannedFunction.Builder builderForValue) {
      if (bannedFunctionBuilder_ == null) {
        requirementType_ = builderForValue.build();
        onChanged();
      } else {
        bannedFunctionBuilder_.setMessage(builderForValue.build());
      }
      requirementTypeCase_ = 3;
      return this;
    }
    /**
     * <code>.soy.Requirement.BannedFunction banned_function = 3;</code>
     */
    public Builder mergeBannedFunction(com.google.template.soy.conformance.Requirement.BannedFunction value) {
      if (bannedFunctionBuilder_ == null) {
        if (requirementTypeCase_ == 3 &&
            requirementType_ != com.google.template.soy.conformance.Requirement.BannedFunction.getDefaultInstance()) {
          requirementType_ = com.google.template.soy.conformance.Requirement.BannedFunction.newBuilder((com.google.template.soy.conformance.Requirement.BannedFunction) requirementType_)
              .mergeFrom(value).buildPartial();
        } else {
          requirementType_ = value;
        }
        onChanged();
      } else {
        if (requirementTypeCase_ == 3) {
          bannedFunctionBuilder_.mergeFrom(value);
        } else {
          bannedFunctionBuilder_.setMessage(value);
        }
      }
      requirementTypeCase_ = 3;
      return this;
    }
    /**
     * <code>.soy.Requirement.BannedFunction banned_function = 3;</code>
     */
    public Builder clearBannedFunction() {
      if (bannedFunctionBuilder_ == null) {
        if (requirementTypeCase_ == 3) {
          requirementTypeCase_ = 0;
          requirementType_ = null;
          onChanged();
        }
      } else {
        if (requirementTypeCase_ == 3) {
          requirementTypeCase_ = 0;
          requirementType_ = null;
        }
        bannedFunctionBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.soy.Requirement.BannedFunction banned_function = 3;</code>
     */
    public com.google.template.soy.conformance.Requirement.BannedFunction.Builder getBannedFunctionBuilder() {
      return getBannedFunctionFieldBuilder().getBuilder();
    }
    /**
     * <code>.soy.Requirement.BannedFunction banned_function = 3;</code>
     */
    @java.lang.Override
    public com.google.template.soy.conformance.Requirement.BannedFunctionOrBuilder getBannedFunctionOrBuilder() {
      if ((requirementTypeCase_ == 3) && (bannedFunctionBuilder_ != null)) {
        return bannedFunctionBuilder_.getMessageOrBuilder();
      } else {
        if (requirementTypeCase_ == 3) {
          return (com.google.template.soy.conformance.Requirement.BannedFunction) requirementType_;
        }
        return com.google.template.soy.conformance.Requirement.BannedFunction.getDefaultInstance();
      }
    }
    /**
     * <code>.soy.Requirement.BannedFunction banned_function = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.google.template.soy.conformance.Requirement.BannedFunction, com.google.template.soy.conformance.Requirement.BannedFunction.Builder, com.google.template.soy.conformance.Requirement.BannedFunctionOrBuilder> 
        getBannedFunctionFieldBuilder() {
      if (bannedFunctionBuilder_ == null) {
        if (!(requirementTypeCase_ == 3)) {
          requirementType_ = com.google.template.soy.conformance.Requirement.BannedFunction.getDefaultInstance();
        }
        bannedFunctionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.google.template.soy.conformance.Requirement.BannedFunction, com.google.template.soy.conformance.Requirement.BannedFunction.Builder, com.google.template.soy.conformance.Requirement.BannedFunctionOrBuilder>(
                (com.google.template.soy.conformance.Requirement.BannedFunction) requirementType_,
                getParentForChildren(),
                isClean());
        requirementType_ = null;
      }
      requirementTypeCase_ = 3;
      onChanged();
      return bannedFunctionBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.google.template.soy.conformance.Requirement.BannedDirective, com.google.template.soy.conformance.Requirement.BannedDirective.Builder, com.google.template.soy.conformance.Requirement.BannedDirectiveOrBuilder> bannedDirectiveBuilder_;
    /**
     * <code>.soy.Requirement.BannedDirective banned_directive = 4;</code>
     * @return Whether the bannedDirective field is set.
     */
    @java.lang.Override
    public boolean hasBannedDirective() {
      return requirementTypeCase_ == 4;
    }
    /**
     * <code>.soy.Requirement.BannedDirective banned_directive = 4;</code>
     * @return The bannedDirective.
     */
    @java.lang.Override
    public com.google.template.soy.conformance.Requirement.BannedDirective getBannedDirective() {
      if (bannedDirectiveBuilder_ == null) {
        if (requirementTypeCase_ == 4) {
          return (com.google.template.soy.conformance.Requirement.BannedDirective) requirementType_;
        }
        return com.google.template.soy.conformance.Requirement.BannedDirective.getDefaultInstance();
      } else {
        if (requirementTypeCase_ == 4) {
          return bannedDirectiveBuilder_.getMessage();
        }
        return com.google.template.soy.conformance.Requirement.BannedDirective.getDefaultInstance();
      }
    }
    /**
     * <code>.soy.Requirement.BannedDirective banned_directive = 4;</code>
     */
    public Builder setBannedDirective(com.google.template.soy.conformance.Requirement.BannedDirective value) {
      if (bannedDirectiveBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        requirementType_ = value;
        onChanged();
      } else {
        bannedDirectiveBuilder_.setMessage(value);
      }
      requirementTypeCase_ = 4;
      return this;
    }
    /**
     * <code>.soy.Requirement.BannedDirective banned_directive = 4;</code>
     */
    public Builder setBannedDirective(
        com.google.template.soy.conformance.Requirement.BannedDirective.Builder builderForValue) {
      if (bannedDirectiveBuilder_ == null) {
        requirementType_ = builderForValue.build();
        onChanged();
      } else {
        bannedDirectiveBuilder_.setMessage(builderForValue.build());
      }
      requirementTypeCase_ = 4;
      return this;
    }
    /**
     * <code>.soy.Requirement.BannedDirective banned_directive = 4;</code>
     */
    public Builder mergeBannedDirective(com.google.template.soy.conformance.Requirement.BannedDirective value) {
      if (bannedDirectiveBuilder_ == null) {
        if (requirementTypeCase_ == 4 &&
            requirementType_ != com.google.template.soy.conformance.Requirement.BannedDirective.getDefaultInstance()) {
          requirementType_ = com.google.template.soy.conformance.Requirement.BannedDirective.newBuilder((com.google.template.soy.conformance.Requirement.BannedDirective) requirementType_)
              .mergeFrom(value).buildPartial();
        } else {
          requirementType_ = value;
        }
        onChanged();
      } else {
        if (requirementTypeCase_ == 4) {
          bannedDirectiveBuilder_.mergeFrom(value);
        } else {
          bannedDirectiveBuilder_.setMessage(value);
        }
      }
      requirementTypeCase_ = 4;
      return this;
    }
    /**
     * <code>.soy.Requirement.BannedDirective banned_directive = 4;</code>
     */
    public Builder clearBannedDirective() {
      if (bannedDirectiveBuilder_ == null) {
        if (requirementTypeCase_ == 4) {
          requirementTypeCase_ = 0;
          requirementType_ = null;
          onChanged();
        }
      } else {
        if (requirementTypeCase_ == 4) {
          requirementTypeCase_ = 0;
          requirementType_ = null;
        }
        bannedDirectiveBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.soy.Requirement.BannedDirective banned_directive = 4;</code>
     */
    public com.google.template.soy.conformance.Requirement.BannedDirective.Builder getBannedDirectiveBuilder() {
      return getBannedDirectiveFieldBuilder().getBuilder();
    }
    /**
     * <code>.soy.Requirement.BannedDirective banned_directive = 4;</code>
     */
    @java.lang.Override
    public com.google.template.soy.conformance.Requirement.BannedDirectiveOrBuilder getBannedDirectiveOrBuilder() {
      if ((requirementTypeCase_ == 4) && (bannedDirectiveBuilder_ != null)) {
        return bannedDirectiveBuilder_.getMessageOrBuilder();
      } else {
        if (requirementTypeCase_ == 4) {
          return (com.google.template.soy.conformance.Requirement.BannedDirective) requirementType_;
        }
        return com.google.template.soy.conformance.Requirement.BannedDirective.getDefaultInstance();
      }
    }
    /**
     * <code>.soy.Requirement.BannedDirective banned_directive = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.google.template.soy.conformance.Requirement.BannedDirective, com.google.template.soy.conformance.Requirement.BannedDirective.Builder, com.google.template.soy.conformance.Requirement.BannedDirectiveOrBuilder> 
        getBannedDirectiveFieldBuilder() {
      if (bannedDirectiveBuilder_ == null) {
        if (!(requirementTypeCase_ == 4)) {
          requirementType_ = com.google.template.soy.conformance.Requirement.BannedDirective.getDefaultInstance();
        }
        bannedDirectiveBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.google.template.soy.conformance.Requirement.BannedDirective, com.google.template.soy.conformance.Requirement.BannedDirective.Builder, com.google.template.soy.conformance.Requirement.BannedDirectiveOrBuilder>(
                (com.google.template.soy.conformance.Requirement.BannedDirective) requirementType_,
                getParentForChildren(),
                isClean());
        requirementType_ = null;
      }
      requirementTypeCase_ = 4;
      onChanged();
      return bannedDirectiveBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.google.template.soy.conformance.Requirement.BannedRawText, com.google.template.soy.conformance.Requirement.BannedRawText.Builder, com.google.template.soy.conformance.Requirement.BannedRawTextOrBuilder> bannedRawTextBuilder_;
    /**
     * <code>.soy.Requirement.BannedRawText banned_raw_text = 5;</code>
     * @return Whether the bannedRawText field is set.
     */
    @java.lang.Override
    public boolean hasBannedRawText() {
      return requirementTypeCase_ == 5;
    }
    /**
     * <code>.soy.Requirement.BannedRawText banned_raw_text = 5;</code>
     * @return The bannedRawText.
     */
    @java.lang.Override
    public com.google.template.soy.conformance.Requirement.BannedRawText getBannedRawText() {
      if (bannedRawTextBuilder_ == null) {
        if (requirementTypeCase_ == 5) {
          return (com.google.template.soy.conformance.Requirement.BannedRawText) requirementType_;
        }
        return com.google.template.soy.conformance.Requirement.BannedRawText.getDefaultInstance();
      } else {
        if (requirementTypeCase_ == 5) {
          return bannedRawTextBuilder_.getMessage();
        }
        return com.google.template.soy.conformance.Requirement.BannedRawText.getDefaultInstance();
      }
    }
    /**
     * <code>.soy.Requirement.BannedRawText banned_raw_text = 5;</code>
     */
    public Builder setBannedRawText(com.google.template.soy.conformance.Requirement.BannedRawText value) {
      if (bannedRawTextBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        requirementType_ = value;
        onChanged();
      } else {
        bannedRawTextBuilder_.setMessage(value);
      }
      requirementTypeCase_ = 5;
      return this;
    }
    /**
     * <code>.soy.Requirement.BannedRawText banned_raw_text = 5;</code>
     */
    public Builder setBannedRawText(
        com.google.template.soy.conformance.Requirement.BannedRawText.Builder builderForValue) {
      if (bannedRawTextBuilder_ == null) {
        requirementType_ = builderForValue.build();
        onChanged();
      } else {
        bannedRawTextBuilder_.setMessage(builderForValue.build());
      }
      requirementTypeCase_ = 5;
      return this;
    }
    /**
     * <code>.soy.Requirement.BannedRawText banned_raw_text = 5;</code>
     */
    public Builder mergeBannedRawText(com.google.template.soy.conformance.Requirement.BannedRawText value) {
      if (bannedRawTextBuilder_ == null) {
        if (requirementTypeCase_ == 5 &&
            requirementType_ != com.google.template.soy.conformance.Requirement.BannedRawText.getDefaultInstance()) {
          requirementType_ = com.google.template.soy.conformance.Requirement.BannedRawText.newBuilder((com.google.template.soy.conformance.Requirement.BannedRawText) requirementType_)
              .mergeFrom(value).buildPartial();
        } else {
          requirementType_ = value;
        }
        onChanged();
      } else {
        if (requirementTypeCase_ == 5) {
          bannedRawTextBuilder_.mergeFrom(value);
        } else {
          bannedRawTextBuilder_.setMessage(value);
        }
      }
      requirementTypeCase_ = 5;
      return this;
    }
    /**
     * <code>.soy.Requirement.BannedRawText banned_raw_text = 5;</code>
     */
    public Builder clearBannedRawText() {
      if (bannedRawTextBuilder_ == null) {
        if (requirementTypeCase_ == 5) {
          requirementTypeCase_ = 0;
          requirementType_ = null;
          onChanged();
        }
      } else {
        if (requirementTypeCase_ == 5) {
          requirementTypeCase_ = 0;
          requirementType_ = null;
        }
        bannedRawTextBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.soy.Requirement.BannedRawText banned_raw_text = 5;</code>
     */
    public com.google.template.soy.conformance.Requirement.BannedRawText.Builder getBannedRawTextBuilder() {
      return getBannedRawTextFieldBuilder().getBuilder();
    }
    /**
     * <code>.soy.Requirement.BannedRawText banned_raw_text = 5;</code>
     */
    @java.lang.Override
    public com.google.template.soy.conformance.Requirement.BannedRawTextOrBuilder getBannedRawTextOrBuilder() {
      if ((requirementTypeCase_ == 5) && (bannedRawTextBuilder_ != null)) {
        return bannedRawTextBuilder_.getMessageOrBuilder();
      } else {
        if (requirementTypeCase_ == 5) {
          return (com.google.template.soy.conformance.Requirement.BannedRawText) requirementType_;
        }
        return com.google.template.soy.conformance.Requirement.BannedRawText.getDefaultInstance();
      }
    }
    /**
     * <code>.soy.Requirement.BannedRawText banned_raw_text = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.google.template.soy.conformance.Requirement.BannedRawText, com.google.template.soy.conformance.Requirement.BannedRawText.Builder, com.google.template.soy.conformance.Requirement.BannedRawTextOrBuilder> 
        getBannedRawTextFieldBuilder() {
      if (bannedRawTextBuilder_ == null) {
        if (!(requirementTypeCase_ == 5)) {
          requirementType_ = com.google.template.soy.conformance.Requirement.BannedRawText.getDefaultInstance();
        }
        bannedRawTextBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.google.template.soy.conformance.Requirement.BannedRawText, com.google.template.soy.conformance.Requirement.BannedRawText.Builder, com.google.template.soy.conformance.Requirement.BannedRawTextOrBuilder>(
                (com.google.template.soy.conformance.Requirement.BannedRawText) requirementType_,
                getParentForChildren(),
                isClean());
        requirementType_ = null;
      }
      requirementTypeCase_ = 5;
      onChanged();
      return bannedRawTextBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.google.template.soy.conformance.Requirement.Custom, com.google.template.soy.conformance.Requirement.Custom.Builder, com.google.template.soy.conformance.Requirement.CustomOrBuilder> customBuilder_;
    /**
     * <code>.soy.Requirement.Custom custom = 7;</code>
     * @return Whether the custom field is set.
     */
    @java.lang.Override
    public boolean hasCustom() {
      return requirementTypeCase_ == 7;
    }
    /**
     * <code>.soy.Requirement.Custom custom = 7;</code>
     * @return The custom.
     */
    @java.lang.Override
    public com.google.template.soy.conformance.Requirement.Custom getCustom() {
      if (customBuilder_ == null) {
        if (requirementTypeCase_ == 7) {
          return (com.google.template.soy.conformance.Requirement.Custom) requirementType_;
        }
        return com.google.template.soy.conformance.Requirement.Custom.getDefaultInstance();
      } else {
        if (requirementTypeCase_ == 7) {
          return customBuilder_.getMessage();
        }
        return com.google.template.soy.conformance.Requirement.Custom.getDefaultInstance();
      }
    }
    /**
     * <code>.soy.Requirement.Custom custom = 7;</code>
     */
    public Builder setCustom(com.google.template.soy.conformance.Requirement.Custom value) {
      if (customBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        requirementType_ = value;
        onChanged();
      } else {
        customBuilder_.setMessage(value);
      }
      requirementTypeCase_ = 7;
      return this;
    }
    /**
     * <code>.soy.Requirement.Custom custom = 7;</code>
     */
    public Builder setCustom(
        com.google.template.soy.conformance.Requirement.Custom.Builder builderForValue) {
      if (customBuilder_ == null) {
        requirementType_ = builderForValue.build();
        onChanged();
      } else {
        customBuilder_.setMessage(builderForValue.build());
      }
      requirementTypeCase_ = 7;
      return this;
    }
    /**
     * <code>.soy.Requirement.Custom custom = 7;</code>
     */
    public Builder mergeCustom(com.google.template.soy.conformance.Requirement.Custom value) {
      if (customBuilder_ == null) {
        if (requirementTypeCase_ == 7 &&
            requirementType_ != com.google.template.soy.conformance.Requirement.Custom.getDefaultInstance()) {
          requirementType_ = com.google.template.soy.conformance.Requirement.Custom.newBuilder((com.google.template.soy.conformance.Requirement.Custom) requirementType_)
              .mergeFrom(value).buildPartial();
        } else {
          requirementType_ = value;
        }
        onChanged();
      } else {
        if (requirementTypeCase_ == 7) {
          customBuilder_.mergeFrom(value);
        } else {
          customBuilder_.setMessage(value);
        }
      }
      requirementTypeCase_ = 7;
      return this;
    }
    /**
     * <code>.soy.Requirement.Custom custom = 7;</code>
     */
    public Builder clearCustom() {
      if (customBuilder_ == null) {
        if (requirementTypeCase_ == 7) {
          requirementTypeCase_ = 0;
          requirementType_ = null;
          onChanged();
        }
      } else {
        if (requirementTypeCase_ == 7) {
          requirementTypeCase_ = 0;
          requirementType_ = null;
        }
        customBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.soy.Requirement.Custom custom = 7;</code>
     */
    public com.google.template.soy.conformance.Requirement.Custom.Builder getCustomBuilder() {
      return getCustomFieldBuilder().getBuilder();
    }
    /**
     * <code>.soy.Requirement.Custom custom = 7;</code>
     */
    @java.lang.Override
    public com.google.template.soy.conformance.Requirement.CustomOrBuilder getCustomOrBuilder() {
      if ((requirementTypeCase_ == 7) && (customBuilder_ != null)) {
        return customBuilder_.getMessageOrBuilder();
      } else {
        if (requirementTypeCase_ == 7) {
          return (com.google.template.soy.conformance.Requirement.Custom) requirementType_;
        }
        return com.google.template.soy.conformance.Requirement.Custom.getDefaultInstance();
      }
    }
    /**
     * <code>.soy.Requirement.Custom custom = 7;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.google.template.soy.conformance.Requirement.Custom, com.google.template.soy.conformance.Requirement.Custom.Builder, com.google.template.soy.conformance.Requirement.CustomOrBuilder> 
        getCustomFieldBuilder() {
      if (customBuilder_ == null) {
        if (!(requirementTypeCase_ == 7)) {
          requirementType_ = com.google.template.soy.conformance.Requirement.Custom.getDefaultInstance();
        }
        customBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.google.template.soy.conformance.Requirement.Custom, com.google.template.soy.conformance.Requirement.Custom.Builder, com.google.template.soy.conformance.Requirement.CustomOrBuilder>(
                (com.google.template.soy.conformance.Requirement.Custom) requirementType_,
                getParentForChildren(),
                isClean());
        requirementType_ = null;
      }
      requirementTypeCase_ = 7;
      onChanged();
      return customBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.google.template.soy.conformance.Requirement.BannedHtmlTag, com.google.template.soy.conformance.Requirement.BannedHtmlTag.Builder, com.google.template.soy.conformance.Requirement.BannedHtmlTagOrBuilder> bannedHtmlTagBuilder_;
    /**
     * <code>.soy.Requirement.BannedHtmlTag banned_html_tag = 11;</code>
     * @return Whether the bannedHtmlTag field is set.
     */
    @java.lang.Override
    public boolean hasBannedHtmlTag() {
      return requirementTypeCase_ == 11;
    }
    /**
     * <code>.soy.Requirement.BannedHtmlTag banned_html_tag = 11;</code>
     * @return The bannedHtmlTag.
     */
    @java.lang.Override
    public com.google.template.soy.conformance.Requirement.BannedHtmlTag getBannedHtmlTag() {
      if (bannedHtmlTagBuilder_ == null) {
        if (requirementTypeCase_ == 11) {
          return (com.google.template.soy.conformance.Requirement.BannedHtmlTag) requirementType_;
        }
        return com.google.template.soy.conformance.Requirement.BannedHtmlTag.getDefaultInstance();
      } else {
        if (requirementTypeCase_ == 11) {
          return bannedHtmlTagBuilder_.getMessage();
        }
        return com.google.template.soy.conformance.Requirement.BannedHtmlTag.getDefaultInstance();
      }
    }
    /**
     * <code>.soy.Requirement.BannedHtmlTag banned_html_tag = 11;</code>
     */
    public Builder setBannedHtmlTag(com.google.template.soy.conformance.Requirement.BannedHtmlTag value) {
      if (bannedHtmlTagBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        requirementType_ = value;
        onChanged();
      } else {
        bannedHtmlTagBuilder_.setMessage(value);
      }
      requirementTypeCase_ = 11;
      return this;
    }
    /**
     * <code>.soy.Requirement.BannedHtmlTag banned_html_tag = 11;</code>
     */
    public Builder setBannedHtmlTag(
        com.google.template.soy.conformance.Requirement.BannedHtmlTag.Builder builderForValue) {
      if (bannedHtmlTagBuilder_ == null) {
        requirementType_ = builderForValue.build();
        onChanged();
      } else {
        bannedHtmlTagBuilder_.setMessage(builderForValue.build());
      }
      requirementTypeCase_ = 11;
      return this;
    }
    /**
     * <code>.soy.Requirement.BannedHtmlTag banned_html_tag = 11;</code>
     */
    public Builder mergeBannedHtmlTag(com.google.template.soy.conformance.Requirement.BannedHtmlTag value) {
      if (bannedHtmlTagBuilder_ == null) {
        if (requirementTypeCase_ == 11 &&
            requirementType_ != com.google.template.soy.conformance.Requirement.BannedHtmlTag.getDefaultInstance()) {
          requirementType_ = com.google.template.soy.conformance.Requirement.BannedHtmlTag.newBuilder((com.google.template.soy.conformance.Requirement.BannedHtmlTag) requirementType_)
              .mergeFrom(value).buildPartial();
        } else {
          requirementType_ = value;
        }
        onChanged();
      } else {
        if (requirementTypeCase_ == 11) {
          bannedHtmlTagBuilder_.mergeFrom(value);
        } else {
          bannedHtmlTagBuilder_.setMessage(value);
        }
      }
      requirementTypeCase_ = 11;
      return this;
    }
    /**
     * <code>.soy.Requirement.BannedHtmlTag banned_html_tag = 11;</code>
     */
    public Builder clearBannedHtmlTag() {
      if (bannedHtmlTagBuilder_ == null) {
        if (requirementTypeCase_ == 11) {
          requirementTypeCase_ = 0;
          requirementType_ = null;
          onChanged();
        }
      } else {
        if (requirementTypeCase_ == 11) {
          requirementTypeCase_ = 0;
          requirementType_ = null;
        }
        bannedHtmlTagBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.soy.Requirement.BannedHtmlTag banned_html_tag = 11;</code>
     */
    public com.google.template.soy.conformance.Requirement.BannedHtmlTag.Builder getBannedHtmlTagBuilder() {
      return getBannedHtmlTagFieldBuilder().getBuilder();
    }
    /**
     * <code>.soy.Requirement.BannedHtmlTag banned_html_tag = 11;</code>
     */
    @java.lang.Override
    public com.google.template.soy.conformance.Requirement.BannedHtmlTagOrBuilder getBannedHtmlTagOrBuilder() {
      if ((requirementTypeCase_ == 11) && (bannedHtmlTagBuilder_ != null)) {
        return bannedHtmlTagBuilder_.getMessageOrBuilder();
      } else {
        if (requirementTypeCase_ == 11) {
          return (com.google.template.soy.conformance.Requirement.BannedHtmlTag) requirementType_;
        }
        return com.google.template.soy.conformance.Requirement.BannedHtmlTag.getDefaultInstance();
      }
    }
    /**
     * <code>.soy.Requirement.BannedHtmlTag banned_html_tag = 11;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.google.template.soy.conformance.Requirement.BannedHtmlTag, com.google.template.soy.conformance.Requirement.BannedHtmlTag.Builder, com.google.template.soy.conformance.Requirement.BannedHtmlTagOrBuilder> 
        getBannedHtmlTagFieldBuilder() {
      if (bannedHtmlTagBuilder_ == null) {
        if (!(requirementTypeCase_ == 11)) {
          requirementType_ = com.google.template.soy.conformance.Requirement.BannedHtmlTag.getDefaultInstance();
        }
        bannedHtmlTagBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.google.template.soy.conformance.Requirement.BannedHtmlTag, com.google.template.soy.conformance.Requirement.BannedHtmlTag.Builder, com.google.template.soy.conformance.Requirement.BannedHtmlTagOrBuilder>(
                (com.google.template.soy.conformance.Requirement.BannedHtmlTag) requirementType_,
                getParentForChildren(),
                isClean());
        requirementType_ = null;
      }
      requirementTypeCase_ = 11;
      onChanged();
      return bannedHtmlTagBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.google.template.soy.conformance.Requirement.BanXidForCssObfuscation, com.google.template.soy.conformance.Requirement.BanXidForCssObfuscation.Builder, com.google.template.soy.conformance.Requirement.BanXidForCssObfuscationOrBuilder> banXidForCssObfuscationBuilder_;
    /**
     * <code>.soy.Requirement.BanXidForCssObfuscation ban_xid_for_css_obfuscation = 14;</code>
     * @return Whether the banXidForCssObfuscation field is set.
     */
    @java.lang.Override
    public boolean hasBanXidForCssObfuscation() {
      return requirementTypeCase_ == 14;
    }
    /**
     * <code>.soy.Requirement.BanXidForCssObfuscation ban_xid_for_css_obfuscation = 14;</code>
     * @return The banXidForCssObfuscation.
     */
    @java.lang.Override
    public com.google.template.soy.conformance.Requirement.BanXidForCssObfuscation getBanXidForCssObfuscation() {
      if (banXidForCssObfuscationBuilder_ == null) {
        if (requirementTypeCase_ == 14) {
          return (com.google.template.soy.conformance.Requirement.BanXidForCssObfuscation) requirementType_;
        }
        return com.google.template.soy.conformance.Requirement.BanXidForCssObfuscation.getDefaultInstance();
      } else {
        if (requirementTypeCase_ == 14) {
          return banXidForCssObfuscationBuilder_.getMessage();
        }
        return com.google.template.soy.conformance.Requirement.BanXidForCssObfuscation.getDefaultInstance();
      }
    }
    /**
     * <code>.soy.Requirement.BanXidForCssObfuscation ban_xid_for_css_obfuscation = 14;</code>
     */
    public Builder setBanXidForCssObfuscation(com.google.template.soy.conformance.Requirement.BanXidForCssObfuscation value) {
      if (banXidForCssObfuscationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        requirementType_ = value;
        onChanged();
      } else {
        banXidForCssObfuscationBuilder_.setMessage(value);
      }
      requirementTypeCase_ = 14;
      return this;
    }
    /**
     * <code>.soy.Requirement.BanXidForCssObfuscation ban_xid_for_css_obfuscation = 14;</code>
     */
    public Builder setBanXidForCssObfuscation(
        com.google.template.soy.conformance.Requirement.BanXidForCssObfuscation.Builder builderForValue) {
      if (banXidForCssObfuscationBuilder_ == null) {
        requirementType_ = builderForValue.build();
        onChanged();
      } else {
        banXidForCssObfuscationBuilder_.setMessage(builderForValue.build());
      }
      requirementTypeCase_ = 14;
      return this;
    }
    /**
     * <code>.soy.Requirement.BanXidForCssObfuscation ban_xid_for_css_obfuscation = 14;</code>
     */
    public Builder mergeBanXidForCssObfuscation(com.google.template.soy.conformance.Requirement.BanXidForCssObfuscation value) {
      if (banXidForCssObfuscationBuilder_ == null) {
        if (requirementTypeCase_ == 14 &&
            requirementType_ != com.google.template.soy.conformance.Requirement.BanXidForCssObfuscation.getDefaultInstance()) {
          requirementType_ = com.google.template.soy.conformance.Requirement.BanXidForCssObfuscation.newBuilder((com.google.template.soy.conformance.Requirement.BanXidForCssObfuscation) requirementType_)
              .mergeFrom(value).buildPartial();
        } else {
          requirementType_ = value;
        }
        onChanged();
      } else {
        if (requirementTypeCase_ == 14) {
          banXidForCssObfuscationBuilder_.mergeFrom(value);
        } else {
          banXidForCssObfuscationBuilder_.setMessage(value);
        }
      }
      requirementTypeCase_ = 14;
      return this;
    }
    /**
     * <code>.soy.Requirement.BanXidForCssObfuscation ban_xid_for_css_obfuscation = 14;</code>
     */
    public Builder clearBanXidForCssObfuscation() {
      if (banXidForCssObfuscationBuilder_ == null) {
        if (requirementTypeCase_ == 14) {
          requirementTypeCase_ = 0;
          requirementType_ = null;
          onChanged();
        }
      } else {
        if (requirementTypeCase_ == 14) {
          requirementTypeCase_ = 0;
          requirementType_ = null;
        }
        banXidForCssObfuscationBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.soy.Requirement.BanXidForCssObfuscation ban_xid_for_css_obfuscation = 14;</code>
     */
    public com.google.template.soy.conformance.Requirement.BanXidForCssObfuscation.Builder getBanXidForCssObfuscationBuilder() {
      return getBanXidForCssObfuscationFieldBuilder().getBuilder();
    }
    /**
     * <code>.soy.Requirement.BanXidForCssObfuscation ban_xid_for_css_obfuscation = 14;</code>
     */
    @java.lang.Override
    public com.google.template.soy.conformance.Requirement.BanXidForCssObfuscationOrBuilder getBanXidForCssObfuscationOrBuilder() {
      if ((requirementTypeCase_ == 14) && (banXidForCssObfuscationBuilder_ != null)) {
        return banXidForCssObfuscationBuilder_.getMessageOrBuilder();
      } else {
        if (requirementTypeCase_ == 14) {
          return (com.google.template.soy.conformance.Requirement.BanXidForCssObfuscation) requirementType_;
        }
        return com.google.template.soy.conformance.Requirement.BanXidForCssObfuscation.getDefaultInstance();
      }
    }
    /**
     * <code>.soy.Requirement.BanXidForCssObfuscation ban_xid_for_css_obfuscation = 14;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.google.template.soy.conformance.Requirement.BanXidForCssObfuscation, com.google.template.soy.conformance.Requirement.BanXidForCssObfuscation.Builder, com.google.template.soy.conformance.Requirement.BanXidForCssObfuscationOrBuilder> 
        getBanXidForCssObfuscationFieldBuilder() {
      if (banXidForCssObfuscationBuilder_ == null) {
        if (!(requirementTypeCase_ == 14)) {
          requirementType_ = com.google.template.soy.conformance.Requirement.BanXidForCssObfuscation.getDefaultInstance();
        }
        banXidForCssObfuscationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.google.template.soy.conformance.Requirement.BanXidForCssObfuscation, com.google.template.soy.conformance.Requirement.BanXidForCssObfuscation.Builder, com.google.template.soy.conformance.Requirement.BanXidForCssObfuscationOrBuilder>(
                (com.google.template.soy.conformance.Requirement.BanXidForCssObfuscation) requirementType_,
                getParentForChildren(),
                isClean());
        requirementType_ = null;
      }
      requirementTypeCase_ = 14;
      onChanged();
      return banXidForCssObfuscationBuilder_;
    }

    private java.lang.Object errorMessage_ = "";
    /**
     * <pre>
     * Required: The message to report when a requirement is violated.
     * This should reference a document describing the reason for the requirement
     * and contacts.
     * </pre>
     *
     * <code>string error_message = 8;</code>
     * @return The errorMessage.
     */
    public java.lang.String getErrorMessage() {
      java.lang.Object ref = errorMessage_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        errorMessage_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Required: The message to report when a requirement is violated.
     * This should reference a document describing the reason for the requirement
     * and contacts.
     * </pre>
     *
     * <code>string error_message = 8;</code>
     * @return The bytes for errorMessage.
     */
    public com.google.protobuf.ByteString
        getErrorMessageBytes() {
      java.lang.Object ref = errorMessage_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        errorMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Required: The message to report when a requirement is violated.
     * This should reference a document describing the reason for the requirement
     * and contacts.
     * </pre>
     *
     * <code>string error_message = 8;</code>
     * @param value The errorMessage to set.
     * @return This builder for chaining.
     */
    public Builder setErrorMessage(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      errorMessage_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required: The message to report when a requirement is violated.
     * This should reference a document describing the reason for the requirement
     * and contacts.
     * </pre>
     *
     * <code>string error_message = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearErrorMessage() {
      errorMessage_ = getDefaultInstance().getErrorMessage();
      bitField0_ = (bitField0_ & ~0x00000080);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required: The message to report when a requirement is violated.
     * This should reference a document describing the reason for the requirement
     * and contacts.
     * </pre>
     *
     * <code>string error_message = 8;</code>
     * @param value The bytes for errorMessage to set.
     * @return This builder for chaining.
     */
    public Builder setErrorMessageBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      errorMessage_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringArrayList exempt_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    private void ensureExemptIsMutable() {
      if (!exempt_.isModifiable()) {
        exempt_ = new com.google.protobuf.LazyStringArrayList(exempt_);
      }
      bitField0_ |= 0x00000100;
    }
    /**
     * <pre>
     * Optional: Any source path that contains a exempted substring is exempt
     * from the requirement.
     * </pre>
     *
     * <code>repeated string exempt = 16;</code>
     * @return A list containing the exempt.
     */
    public com.google.protobuf.ProtocolStringList
        getExemptList() {
      exempt_.makeImmutable();
      return exempt_;
    }
    /**
     * <pre>
     * Optional: Any source path that contains a exempted substring is exempt
     * from the requirement.
     * </pre>
     *
     * <code>repeated string exempt = 16;</code>
     * @return The count of exempt.
     */
    public int getExemptCount() {
      return exempt_.size();
    }
    /**
     * <pre>
     * Optional: Any source path that contains a exempted substring is exempt
     * from the requirement.
     * </pre>
     *
     * <code>repeated string exempt = 16;</code>
     * @param index The index of the element to return.
     * @return The exempt at the given index.
     */
    public java.lang.String getExempt(int index) {
      return exempt_.get(index);
    }
    /**
     * <pre>
     * Optional: Any source path that contains a exempted substring is exempt
     * from the requirement.
     * </pre>
     *
     * <code>repeated string exempt = 16;</code>
     * @param index The index of the value to return.
     * @return The bytes of the exempt at the given index.
     */
    public com.google.protobuf.ByteString
        getExemptBytes(int index) {
      return exempt_.getByteString(index);
    }
    /**
     * <pre>
     * Optional: Any source path that contains a exempted substring is exempt
     * from the requirement.
     * </pre>
     *
     * <code>repeated string exempt = 16;</code>
     * @param index The index to set the value at.
     * @param value The exempt to set.
     * @return This builder for chaining.
     */
    public Builder setExempt(
        int index, java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureExemptIsMutable();
      exempt_.set(index, value);
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional: Any source path that contains a exempted substring is exempt
     * from the requirement.
     * </pre>
     *
     * <code>repeated string exempt = 16;</code>
     * @param value The exempt to add.
     * @return This builder for chaining.
     */
    public Builder addExempt(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureExemptIsMutable();
      exempt_.add(value);
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional: Any source path that contains a exempted substring is exempt
     * from the requirement.
     * </pre>
     *
     * <code>repeated string exempt = 16;</code>
     * @param values The exempt to add.
     * @return This builder for chaining.
     */
    public Builder addAllExempt(
        java.lang.Iterable<java.lang.String> values) {
      ensureExemptIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, exempt_);
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional: Any source path that contains a exempted substring is exempt
     * from the requirement.
     * </pre>
     *
     * <code>repeated string exempt = 16;</code>
     * @return This builder for chaining.
     */
    public Builder clearExempt() {
      exempt_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
      bitField0_ = (bitField0_ & ~0x00000100);;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional: Any source path that contains a exempted substring is exempt
     * from the requirement.
     * </pre>
     *
     * <code>repeated string exempt = 16;</code>
     * @param value The bytes of the exempt to add.
     * @return This builder for chaining.
     */
    public Builder addExemptBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      ensureExemptIsMutable();
      exempt_.add(value);
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringArrayList onlyApplyTo_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    private void ensureOnlyApplyToIsMutable() {
      if (!onlyApplyTo_.isModifiable()) {
        onlyApplyTo_ = new com.google.protobuf.LazyStringArrayList(onlyApplyTo_);
      }
      bitField0_ |= 0x00000200;
    }
    /**
     * <pre>
     * Optional: A list of paths. If this field is presented, the conformance
     * test is only running for the files matching the paths specified here.
     * exmempted sources will still be exempted.
     * </pre>
     *
     * <code>repeated string only_apply_to = 15;</code>
     * @return A list containing the onlyApplyTo.
     */
    public com.google.protobuf.ProtocolStringList
        getOnlyApplyToList() {
      onlyApplyTo_.makeImmutable();
      return onlyApplyTo_;
    }
    /**
     * <pre>
     * Optional: A list of paths. If this field is presented, the conformance
     * test is only running for the files matching the paths specified here.
     * exmempted sources will still be exempted.
     * </pre>
     *
     * <code>repeated string only_apply_to = 15;</code>
     * @return The count of onlyApplyTo.
     */
    public int getOnlyApplyToCount() {
      return onlyApplyTo_.size();
    }
    /**
     * <pre>
     * Optional: A list of paths. If this field is presented, the conformance
     * test is only running for the files matching the paths specified here.
     * exmempted sources will still be exempted.
     * </pre>
     *
     * <code>repeated string only_apply_to = 15;</code>
     * @param index The index of the element to return.
     * @return The onlyApplyTo at the given index.
     */
    public java.lang.String getOnlyApplyTo(int index) {
      return onlyApplyTo_.get(index);
    }
    /**
     * <pre>
     * Optional: A list of paths. If this field is presented, the conformance
     * test is only running for the files matching the paths specified here.
     * exmempted sources will still be exempted.
     * </pre>
     *
     * <code>repeated string only_apply_to = 15;</code>
     * @param index The index of the value to return.
     * @return The bytes of the onlyApplyTo at the given index.
     */
    public com.google.protobuf.ByteString
        getOnlyApplyToBytes(int index) {
      return onlyApplyTo_.getByteString(index);
    }
    /**
     * <pre>
     * Optional: A list of paths. If this field is presented, the conformance
     * test is only running for the files matching the paths specified here.
     * exmempted sources will still be exempted.
     * </pre>
     *
     * <code>repeated string only_apply_to = 15;</code>
     * @param index The index to set the value at.
     * @param value The onlyApplyTo to set.
     * @return This builder for chaining.
     */
    public Builder setOnlyApplyTo(
        int index, java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureOnlyApplyToIsMutable();
      onlyApplyTo_.set(index, value);
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional: A list of paths. If this field is presented, the conformance
     * test is only running for the files matching the paths specified here.
     * exmempted sources will still be exempted.
     * </pre>
     *
     * <code>repeated string only_apply_to = 15;</code>
     * @param value The onlyApplyTo to add.
     * @return This builder for chaining.
     */
    public Builder addOnlyApplyTo(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureOnlyApplyToIsMutable();
      onlyApplyTo_.add(value);
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional: A list of paths. If this field is presented, the conformance
     * test is only running for the files matching the paths specified here.
     * exmempted sources will still be exempted.
     * </pre>
     *
     * <code>repeated string only_apply_to = 15;</code>
     * @param values The onlyApplyTo to add.
     * @return This builder for chaining.
     */
    public Builder addAllOnlyApplyTo(
        java.lang.Iterable<java.lang.String> values) {
      ensureOnlyApplyToIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, onlyApplyTo_);
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional: A list of paths. If this field is presented, the conformance
     * test is only running for the files matching the paths specified here.
     * exmempted sources will still be exempted.
     * </pre>
     *
     * <code>repeated string only_apply_to = 15;</code>
     * @return This builder for chaining.
     */
    public Builder clearOnlyApplyTo() {
      onlyApplyTo_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
      bitField0_ = (bitField0_ & ~0x00000200);;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional: A list of paths. If this field is presented, the conformance
     * test is only running for the files matching the paths specified here.
     * exmempted sources will still be exempted.
     * </pre>
     *
     * <code>repeated string only_apply_to = 15;</code>
     * @param value The bytes of the onlyApplyTo to add.
     * @return This builder for chaining.
     */
    public Builder addOnlyApplyToBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      ensureOnlyApplyToIsMutable();
      onlyApplyTo_.add(value);
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:soy.Requirement)
  }

  // @@protoc_insertion_point(class_scope:soy.Requirement)
  private static final com.google.template.soy.conformance.Requirement DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.template.soy.conformance.Requirement();
  }

  public static com.google.template.soy.conformance.Requirement getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Requirement>
      PARSER = new com.google.protobuf.AbstractParser<Requirement>() {
    @java.lang.Override
    public Requirement parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Requirement> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Requirement> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.template.soy.conformance.Requirement getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

